// source: iotics/api/input.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var iotics_api_common_pb = require('../../iotics/api/common_pb.js');
goog.object.extend(proto, iotics_api_common_pb);
goog.exportSymbol('proto.iotics.api.DeleteInputRequest', null, global);
goog.exportSymbol('proto.iotics.api.DeleteInputRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.DeleteInputResponse', null, global);
goog.exportSymbol('proto.iotics.api.DeleteInputResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.DescribeInputRequest', null, global);
goog.exportSymbol('proto.iotics.api.DescribeInputRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.DescribeInputResponse', null, global);
goog.exportSymbol('proto.iotics.api.DescribeInputResponse.MetaResult', null, global);
goog.exportSymbol('proto.iotics.api.DescribeInputResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.InputID', null, global);
goog.exportSymbol('proto.iotics.api.InputMessage', null, global);
goog.exportSymbol('proto.iotics.api.ReceiveInputMessageRequest', null, global);
goog.exportSymbol('proto.iotics.api.ReceiveInputMessageRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.ReceiveInputMessageResponse', null, global);
goog.exportSymbol('proto.iotics.api.ReceiveInputMessageResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.UpsertInputWithMeta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.InputID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.InputID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.InputID.displayName = 'proto.iotics.api.InputID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteInputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteInputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteInputRequest.displayName = 'proto.iotics.api.DeleteInputRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteInputRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteInputRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteInputRequest.Arguments.displayName = 'proto.iotics.api.DeleteInputRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteInputResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteInputResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteInputResponse.displayName = 'proto.iotics.api.DeleteInputResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteInputResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteInputResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteInputResponse.Payload.displayName = 'proto.iotics.api.DeleteInputResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeInputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeInputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeInputRequest.displayName = 'proto.iotics.api.DescribeInputRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeInputRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeInputRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeInputRequest.Arguments.displayName = 'proto.iotics.api.DescribeInputRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeInputResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeInputResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeInputResponse.displayName = 'proto.iotics.api.DescribeInputResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeInputResponse.MetaResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.DescribeInputResponse.MetaResult.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.DescribeInputResponse.MetaResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeInputResponse.MetaResult.displayName = 'proto.iotics.api.DescribeInputResponse.MetaResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeInputResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeInputResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeInputResponse.Payload.displayName = 'proto.iotics.api.DescribeInputResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpsertInputWithMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.UpsertInputWithMeta.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.UpsertInputWithMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpsertInputWithMeta.displayName = 'proto.iotics.api.UpsertInputWithMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.InputMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.InputMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.InputMessage.displayName = 'proto.iotics.api.InputMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ReceiveInputMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ReceiveInputMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ReceiveInputMessageRequest.displayName = 'proto.iotics.api.ReceiveInputMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ReceiveInputMessageRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ReceiveInputMessageRequest.Arguments.displayName = 'proto.iotics.api.ReceiveInputMessageRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ReceiveInputMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ReceiveInputMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ReceiveInputMessageResponse.displayName = 'proto.iotics.api.ReceiveInputMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ReceiveInputMessageResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ReceiveInputMessageResponse.Payload.displayName = 'proto.iotics.api.ReceiveInputMessageResponse.Payload';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.InputID.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.InputID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.InputID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputID.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    twinid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hostid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.InputID}
 */
proto.iotics.api.InputID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.InputID;
  return proto.iotics.api.InputID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.InputID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.InputID}
 */
proto.iotics.api.InputID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwinid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.InputID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.InputID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.InputID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTwinid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHostid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.iotics.api.InputID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.InputID} returns this
 */
proto.iotics.api.InputID.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string twinId = 2;
 * @return {string}
 */
proto.iotics.api.InputID.prototype.getTwinid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.InputID} returns this
 */
proto.iotics.api.InputID.prototype.setTwinid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hostId = 3;
 * @return {string}
 */
proto.iotics.api.InputID.prototype.getHostid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.InputID} returns this
 */
proto.iotics.api.InputID.prototype.setHostid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteInputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteInputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteInputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.DeleteInputRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteInputRequest}
 */
proto.iotics.api.DeleteInputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteInputRequest;
  return proto.iotics.api.DeleteInputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteInputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteInputRequest}
 */
proto.iotics.api.DeleteInputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DeleteInputRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.DeleteInputRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteInputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteInputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteInputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DeleteInputRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteInputRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteInputRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteInputRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputid: (f = msg.getInputid()) && proto.iotics.api.InputID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteInputRequest.Arguments}
 */
proto.iotics.api.DeleteInputRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteInputRequest.Arguments;
  return proto.iotics.api.DeleteInputRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteInputRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteInputRequest.Arguments}
 */
proto.iotics.api.DeleteInputRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.InputID;
      reader.readMessage(value,proto.iotics.api.InputID.deserializeBinaryFromReader);
      msg.setInputid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteInputRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteInputRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteInputRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.InputID.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputID inputId = 1;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.DeleteInputRequest.Arguments.prototype.getInputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputID, 1));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.DeleteInputRequest.Arguments} returns this
*/
proto.iotics.api.DeleteInputRequest.Arguments.prototype.setInputid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteInputRequest.Arguments} returns this
 */
proto.iotics.api.DeleteInputRequest.Arguments.prototype.clearInputid = function() {
  return this.setInputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteInputRequest.Arguments.prototype.hasInputid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DeleteInputRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DeleteInputRequest} returns this
*/
proto.iotics.api.DeleteInputRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteInputRequest} returns this
 */
proto.iotics.api.DeleteInputRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteInputRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.DeleteInputRequest.Arguments}
 */
proto.iotics.api.DeleteInputRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.DeleteInputRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DeleteInputRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.DeleteInputRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.DeleteInputRequest} returns this
*/
proto.iotics.api.DeleteInputRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteInputRequest} returns this
 */
proto.iotics.api.DeleteInputRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteInputRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteInputResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteInputResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteInputResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.DeleteInputResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteInputResponse}
 */
proto.iotics.api.DeleteInputResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteInputResponse;
  return proto.iotics.api.DeleteInputResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteInputResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteInputResponse}
 */
proto.iotics.api.DeleteInputResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DeleteInputResponse.Payload;
      reader.readMessage(value,proto.iotics.api.DeleteInputResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteInputResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteInputResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteInputResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DeleteInputResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteInputResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteInputResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteInputResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputid: (f = msg.getInputid()) && proto.iotics.api.InputID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteInputResponse.Payload}
 */
proto.iotics.api.DeleteInputResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteInputResponse.Payload;
  return proto.iotics.api.DeleteInputResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteInputResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteInputResponse.Payload}
 */
proto.iotics.api.DeleteInputResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.InputID;
      reader.readMessage(value,proto.iotics.api.InputID.deserializeBinaryFromReader);
      msg.setInputid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteInputResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteInputResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteInputResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteInputResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.InputID.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputID inputId = 1;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.DeleteInputResponse.Payload.prototype.getInputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputID, 1));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.DeleteInputResponse.Payload} returns this
*/
proto.iotics.api.DeleteInputResponse.Payload.prototype.setInputid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteInputResponse.Payload} returns this
 */
proto.iotics.api.DeleteInputResponse.Payload.prototype.clearInputid = function() {
  return this.setInputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteInputResponse.Payload.prototype.hasInputid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DeleteInputResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DeleteInputResponse} returns this
*/
proto.iotics.api.DeleteInputResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteInputResponse} returns this
 */
proto.iotics.api.DeleteInputResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteInputResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.DeleteInputResponse.Payload}
 */
proto.iotics.api.DeleteInputResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.DeleteInputResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DeleteInputResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.DeleteInputResponse.Payload|undefined} value
 * @return {!proto.iotics.api.DeleteInputResponse} returns this
*/
proto.iotics.api.DeleteInputResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteInputResponse} returns this
 */
proto.iotics.api.DeleteInputResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteInputResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeInputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeInputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeInputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.DescribeInputRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeInputRequest}
 */
proto.iotics.api.DescribeInputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeInputRequest;
  return proto.iotics.api.DescribeInputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeInputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeInputRequest}
 */
proto.iotics.api.DescribeInputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DescribeInputRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.DescribeInputRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeInputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeInputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeInputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DescribeInputRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeInputRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeInputRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeInputRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputid: (f = msg.getInputid()) && proto.iotics.api.InputID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeInputRequest.Arguments}
 */
proto.iotics.api.DescribeInputRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeInputRequest.Arguments;
  return proto.iotics.api.DescribeInputRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeInputRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeInputRequest.Arguments}
 */
proto.iotics.api.DescribeInputRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.InputID;
      reader.readMessage(value,proto.iotics.api.InputID.deserializeBinaryFromReader);
      msg.setInputid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeInputRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeInputRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeInputRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.InputID.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputID inputId = 1;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.DescribeInputRequest.Arguments.prototype.getInputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputID, 1));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.DescribeInputRequest.Arguments} returns this
*/
proto.iotics.api.DescribeInputRequest.Arguments.prototype.setInputid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeInputRequest.Arguments} returns this
 */
proto.iotics.api.DescribeInputRequest.Arguments.prototype.clearInputid = function() {
  return this.setInputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeInputRequest.Arguments.prototype.hasInputid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DescribeInputRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DescribeInputRequest} returns this
*/
proto.iotics.api.DescribeInputRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeInputRequest} returns this
 */
proto.iotics.api.DescribeInputRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeInputRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.DescribeInputRequest.Arguments}
 */
proto.iotics.api.DescribeInputRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.DescribeInputRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeInputRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.DescribeInputRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.DescribeInputRequest} returns this
*/
proto.iotics.api.DescribeInputRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeInputRequest} returns this
 */
proto.iotics.api.DescribeInputRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeInputRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeInputResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeInputResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeInputResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.DescribeInputResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeInputResponse}
 */
proto.iotics.api.DescribeInputResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeInputResponse;
  return proto.iotics.api.DescribeInputResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeInputResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeInputResponse}
 */
proto.iotics.api.DescribeInputResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DescribeInputResponse.Payload;
      reader.readMessage(value,proto.iotics.api.DescribeInputResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeInputResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeInputResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeInputResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DescribeInputResponse.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.DescribeInputResponse.MetaResult.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeInputResponse.MetaResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeInputResponse.MetaResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputResponse.MetaResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    iotics_api_common_pb.Value.toObject, includeInstance),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    iotics_api_common_pb.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeInputResponse.MetaResult}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeInputResponse.MetaResult;
  return proto.iotics.api.DescribeInputResponse.MetaResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeInputResponse.MetaResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeInputResponse.MetaResult}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Value;
      reader.readMessage(value,iotics_api_common_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 2:
      var value = new iotics_api_common_pb.Property;
      reader.readMessage(value,iotics_api_common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeInputResponse.MetaResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeInputResponse.MetaResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputResponse.MetaResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      iotics_api_common_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      iotics_api_common_pb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Value values = 1;
 * @return {!Array<!proto.iotics.api.Value>}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.iotics.api.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Value, 1));
};


/**
 * @param {!Array<!proto.iotics.api.Value>} value
 * @return {!proto.iotics.api.DescribeInputResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotics.api.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Value}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotics.api.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.DescribeInputResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * repeated Property properties = 2;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Property, 2));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.DescribeInputResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.DescribeInputResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeInputResponse.MetaResult.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeInputResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeInputResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputid: (f = msg.getInputid()) && proto.iotics.api.InputID.toObject(includeInstance, f),
    result: (f = msg.getResult()) && proto.iotics.api.DescribeInputResponse.MetaResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeInputResponse.Payload}
 */
proto.iotics.api.DescribeInputResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeInputResponse.Payload;
  return proto.iotics.api.DescribeInputResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeInputResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeInputResponse.Payload}
 */
proto.iotics.api.DescribeInputResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.InputID;
      reader.readMessage(value,proto.iotics.api.InputID.deserializeBinaryFromReader);
      msg.setInputid(value);
      break;
    case 2:
      var value = new proto.iotics.api.DescribeInputResponse.MetaResult;
      reader.readMessage(value,proto.iotics.api.DescribeInputResponse.MetaResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeInputResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeInputResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeInputResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.InputID.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DescribeInputResponse.MetaResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputID inputId = 1;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.getInputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputID, 1));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.DescribeInputResponse.Payload} returns this
*/
proto.iotics.api.DescribeInputResponse.Payload.prototype.setInputid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeInputResponse.Payload} returns this
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.clearInputid = function() {
  return this.setInputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.hasInputid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MetaResult result = 2;
 * @return {?proto.iotics.api.DescribeInputResponse.MetaResult}
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.getResult = function() {
  return /** @type{?proto.iotics.api.DescribeInputResponse.MetaResult} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeInputResponse.MetaResult, 2));
};


/**
 * @param {?proto.iotics.api.DescribeInputResponse.MetaResult|undefined} value
 * @return {!proto.iotics.api.DescribeInputResponse.Payload} returns this
*/
proto.iotics.api.DescribeInputResponse.Payload.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeInputResponse.Payload} returns this
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeInputResponse.Payload.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DescribeInputResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DescribeInputResponse} returns this
*/
proto.iotics.api.DescribeInputResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeInputResponse} returns this
 */
proto.iotics.api.DescribeInputResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeInputResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.DescribeInputResponse.Payload}
 */
proto.iotics.api.DescribeInputResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.DescribeInputResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeInputResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.DescribeInputResponse.Payload|undefined} value
 * @return {!proto.iotics.api.DescribeInputResponse} returns this
*/
proto.iotics.api.DescribeInputResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeInputResponse} returns this
 */
proto.iotics.api.DescribeInputResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeInputResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.UpsertInputWithMeta.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpsertInputWithMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpsertInputWithMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpsertInputWithMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertInputWithMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    iotics_api_common_pb.Value.toObject, includeInstance),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    iotics_api_common_pb.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpsertInputWithMeta}
 */
proto.iotics.api.UpsertInputWithMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpsertInputWithMeta;
  return proto.iotics.api.UpsertInputWithMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpsertInputWithMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpsertInputWithMeta}
 */
proto.iotics.api.UpsertInputWithMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new iotics_api_common_pb.Value;
      reader.readMessage(value,iotics_api_common_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 3:
      var value = new iotics_api_common_pb.Property;
      reader.readMessage(value,iotics_api_common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpsertInputWithMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpsertInputWithMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpsertInputWithMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertInputWithMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      iotics_api_common_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      iotics_api_common_pb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.iotics.api.UpsertInputWithMeta.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.UpsertInputWithMeta} returns this
 */
proto.iotics.api.UpsertInputWithMeta.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Value values = 2;
 * @return {!Array<!proto.iotics.api.Value>}
 */
proto.iotics.api.UpsertInputWithMeta.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.iotics.api.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Value, 2));
};


/**
 * @param {!Array<!proto.iotics.api.Value>} value
 * @return {!proto.iotics.api.UpsertInputWithMeta} returns this
*/
proto.iotics.api.UpsertInputWithMeta.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.iotics.api.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Value}
 */
proto.iotics.api.UpsertInputWithMeta.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iotics.api.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.UpsertInputWithMeta} returns this
 */
proto.iotics.api.UpsertInputWithMeta.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * repeated Property properties = 3;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.UpsertInputWithMeta.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Property, 3));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.UpsertInputWithMeta} returns this
*/
proto.iotics.api.UpsertInputWithMeta.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.UpsertInputWithMeta.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.UpsertInputWithMeta} returns this
 */
proto.iotics.api.UpsertInputWithMeta.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.InputMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.InputMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.InputMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    occurredat: (f = msg.getOccurredat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    mime: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.InputMessage}
 */
proto.iotics.api.InputMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.InputMessage;
  return proto.iotics.api.InputMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.InputMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.InputMessage}
 */
proto.iotics.api.InputMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOccurredat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.InputMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.InputMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.InputMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOccurredat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp occurredAt = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotics.api.InputMessage.prototype.getOccurredat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotics.api.InputMessage} returns this
*/
proto.iotics.api.InputMessage.prototype.setOccurredat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.InputMessage} returns this
 */
proto.iotics.api.InputMessage.prototype.clearOccurredat = function() {
  return this.setOccurredat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.InputMessage.prototype.hasOccurredat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string mime = 2;
 * @return {string}
 */
proto.iotics.api.InputMessage.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.InputMessage} returns this
 */
proto.iotics.api.InputMessage.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes data = 3;
 * @return {!(string|Uint8Array)}
 */
proto.iotics.api.InputMessage.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes data = 3;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.iotics.api.InputMessage.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.iotics.api.InputMessage.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.iotics.api.InputMessage} returns this
 */
proto.iotics.api.InputMessage.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ReceiveInputMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ReceiveInputMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.ReceiveInputMessageRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ReceiveInputMessageRequest}
 */
proto.iotics.api.ReceiveInputMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ReceiveInputMessageRequest;
  return proto.iotics.api.ReceiveInputMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ReceiveInputMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ReceiveInputMessageRequest}
 */
proto.iotics.api.ReceiveInputMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.ReceiveInputMessageRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.ReceiveInputMessageRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ReceiveInputMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ReceiveInputMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.ReceiveInputMessageRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ReceiveInputMessageRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ReceiveInputMessageRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputid: (f = msg.getInputid()) && proto.iotics.api.InputID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ReceiveInputMessageRequest.Arguments}
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ReceiveInputMessageRequest.Arguments;
  return proto.iotics.api.ReceiveInputMessageRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ReceiveInputMessageRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ReceiveInputMessageRequest.Arguments}
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.InputID;
      reader.readMessage(value,proto.iotics.api.InputID.deserializeBinaryFromReader);
      msg.setInputid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ReceiveInputMessageRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ReceiveInputMessageRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.InputID.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputID inputId = 1;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.prototype.getInputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputID, 1));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.ReceiveInputMessageRequest.Arguments} returns this
*/
proto.iotics.api.ReceiveInputMessageRequest.Arguments.prototype.setInputid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ReceiveInputMessageRequest.Arguments} returns this
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.prototype.clearInputid = function() {
  return this.setInputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ReceiveInputMessageRequest.Arguments.prototype.hasInputid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ReceiveInputMessageRequest} returns this
*/
proto.iotics.api.ReceiveInputMessageRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ReceiveInputMessageRequest} returns this
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.ReceiveInputMessageRequest.Arguments}
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.ReceiveInputMessageRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.ReceiveInputMessageRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.ReceiveInputMessageRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.ReceiveInputMessageRequest} returns this
*/
proto.iotics.api.ReceiveInputMessageRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ReceiveInputMessageRequest} returns this
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ReceiveInputMessageRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ReceiveInputMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ReceiveInputMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.ReceiveInputMessageResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse}
 */
proto.iotics.api.ReceiveInputMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ReceiveInputMessageResponse;
  return proto.iotics.api.ReceiveInputMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ReceiveInputMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse}
 */
proto.iotics.api.ReceiveInputMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.ReceiveInputMessageResponse.Payload;
      reader.readMessage(value,proto.iotics.api.ReceiveInputMessageResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ReceiveInputMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ReceiveInputMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.ReceiveInputMessageResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ReceiveInputMessageResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ReceiveInputMessageResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputid: (f = msg.getInputid()) && proto.iotics.api.InputID.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && proto.iotics.api.InputMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse.Payload}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ReceiveInputMessageResponse.Payload;
  return proto.iotics.api.ReceiveInputMessageResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ReceiveInputMessageResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse.Payload}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.InputID;
      reader.readMessage(value,proto.iotics.api.InputID.deserializeBinaryFromReader);
      msg.setInputid(value);
      break;
    case 2:
      var value = new proto.iotics.api.InputMessage;
      reader.readMessage(value,proto.iotics.api.InputMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ReceiveInputMessageResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ReceiveInputMessageResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.InputID.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.InputMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputID inputId = 1;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.getInputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputID, 1));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.ReceiveInputMessageResponse.Payload} returns this
*/
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.setInputid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse.Payload} returns this
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.clearInputid = function() {
  return this.setInputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.hasInputid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InputMessage message = 2;
 * @return {?proto.iotics.api.InputMessage}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.getMessage = function() {
  return /** @type{?proto.iotics.api.InputMessage} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputMessage, 2));
};


/**
 * @param {?proto.iotics.api.InputMessage|undefined} value
 * @return {!proto.iotics.api.ReceiveInputMessageResponse.Payload} returns this
*/
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse.Payload} returns this
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ReceiveInputMessageResponse.Payload.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ReceiveInputMessageResponse} returns this
*/
proto.iotics.api.ReceiveInputMessageResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse} returns this
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.ReceiveInputMessageResponse.Payload}
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.ReceiveInputMessageResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.ReceiveInputMessageResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.ReceiveInputMessageResponse.Payload|undefined} value
 * @return {!proto.iotics.api.ReceiveInputMessageResponse} returns this
*/
proto.iotics.api.ReceiveInputMessageResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ReceiveInputMessageResponse} returns this
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ReceiveInputMessageResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.iotics.api);

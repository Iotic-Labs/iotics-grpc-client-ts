// source: iotics/api/feed.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var iotics_api_common_pb = require('../../iotics/api/common_pb.js');
goog.object.extend(proto, iotics_api_common_pb);
goog.exportSymbol('proto.iotics.api.CreateFeedRequest', null, global);
goog.exportSymbol('proto.iotics.api.CreateFeedRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.CreateFeedRequest.Payload', null, global);
goog.exportSymbol('proto.iotics.api.CreateFeedResponse', null, global);
goog.exportSymbol('proto.iotics.api.CreateFeedResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.DeleteFeedRequest', null, global);
goog.exportSymbol('proto.iotics.api.DeleteFeedRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.DeleteFeedResponse', null, global);
goog.exportSymbol('proto.iotics.api.DeleteFeedResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.DescribeFeedRequest', null, global);
goog.exportSymbol('proto.iotics.api.DescribeFeedRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.DescribeFeedResponse', null, global);
goog.exportSymbol('proto.iotics.api.DescribeFeedResponse.MetaResult', null, global);
goog.exportSymbol('proto.iotics.api.DescribeFeedResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.FeedID', null, global);
goog.exportSymbol('proto.iotics.api.ListAllFeedsRequest', null, global);
goog.exportSymbol('proto.iotics.api.ListAllFeedsRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.ListAllFeedsResponse', null, global);
goog.exportSymbol('proto.iotics.api.ListAllFeedsResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.ShareFeedDataRequest', null, global);
goog.exportSymbol('proto.iotics.api.ShareFeedDataRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.ShareFeedDataRequest.Payload', null, global);
goog.exportSymbol('proto.iotics.api.ShareFeedDataResponse', null, global);
goog.exportSymbol('proto.iotics.api.UpdateFeedRequest', null, global);
goog.exportSymbol('proto.iotics.api.UpdateFeedRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.UpdateFeedRequest.Payload', null, global);
goog.exportSymbol('proto.iotics.api.UpdateFeedResponse', null, global);
goog.exportSymbol('proto.iotics.api.UpdateFeedResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.UpsertFeedWithMeta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FeedID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FeedID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FeedID.displayName = 'proto.iotics.api.FeedID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateFeedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateFeedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateFeedRequest.displayName = 'proto.iotics.api.CreateFeedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateFeedRequest.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateFeedRequest.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateFeedRequest.Payload.displayName = 'proto.iotics.api.CreateFeedRequest.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateFeedRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateFeedRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateFeedRequest.Arguments.displayName = 'proto.iotics.api.CreateFeedRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateFeedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateFeedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateFeedResponse.displayName = 'proto.iotics.api.CreateFeedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateFeedResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateFeedResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateFeedResponse.Payload.displayName = 'proto.iotics.api.CreateFeedResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteFeedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteFeedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteFeedRequest.displayName = 'proto.iotics.api.DeleteFeedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteFeedRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteFeedRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteFeedRequest.Arguments.displayName = 'proto.iotics.api.DeleteFeedRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteFeedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteFeedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteFeedResponse.displayName = 'proto.iotics.api.DeleteFeedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteFeedResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteFeedResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteFeedResponse.Payload.displayName = 'proto.iotics.api.DeleteFeedResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateFeedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateFeedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateFeedRequest.displayName = 'proto.iotics.api.UpdateFeedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateFeedRequest.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateFeedRequest.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateFeedRequest.Payload.displayName = 'proto.iotics.api.UpdateFeedRequest.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateFeedRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateFeedRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateFeedRequest.Arguments.displayName = 'proto.iotics.api.UpdateFeedRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateFeedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateFeedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateFeedResponse.displayName = 'proto.iotics.api.UpdateFeedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateFeedResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateFeedResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateFeedResponse.Payload.displayName = 'proto.iotics.api.UpdateFeedResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ShareFeedDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ShareFeedDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ShareFeedDataRequest.displayName = 'proto.iotics.api.ShareFeedDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ShareFeedDataRequest.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ShareFeedDataRequest.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ShareFeedDataRequest.Payload.displayName = 'proto.iotics.api.ShareFeedDataRequest.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ShareFeedDataRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ShareFeedDataRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ShareFeedDataRequest.Arguments.displayName = 'proto.iotics.api.ShareFeedDataRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ShareFeedDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ShareFeedDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ShareFeedDataResponse.displayName = 'proto.iotics.api.ShareFeedDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllFeedsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ListAllFeedsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllFeedsRequest.displayName = 'proto.iotics.api.ListAllFeedsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllFeedsRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ListAllFeedsRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllFeedsRequest.Arguments.displayName = 'proto.iotics.api.ListAllFeedsRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllFeedsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ListAllFeedsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllFeedsResponse.displayName = 'proto.iotics.api.ListAllFeedsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllFeedsResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.ListAllFeedsResponse.Payload.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.ListAllFeedsResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllFeedsResponse.Payload.displayName = 'proto.iotics.api.ListAllFeedsResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeFeedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeFeedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeFeedRequest.displayName = 'proto.iotics.api.DescribeFeedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeFeedRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeFeedRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeFeedRequest.Arguments.displayName = 'proto.iotics.api.DescribeFeedRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeFeedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeFeedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeFeedResponse.displayName = 'proto.iotics.api.DescribeFeedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeFeedResponse.MetaResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.DescribeFeedResponse.MetaResult.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.DescribeFeedResponse.MetaResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeFeedResponse.MetaResult.displayName = 'proto.iotics.api.DescribeFeedResponse.MetaResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeFeedResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeFeedResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeFeedResponse.Payload.displayName = 'proto.iotics.api.DescribeFeedResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpsertFeedWithMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.UpsertFeedWithMeta.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.UpsertFeedWithMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpsertFeedWithMeta.displayName = 'proto.iotics.api.UpsertFeedWithMeta';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FeedID.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FeedID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FeedID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FeedID.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    twinid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hostid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FeedID}
 */
proto.iotics.api.FeedID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FeedID;
  return proto.iotics.api.FeedID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FeedID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FeedID}
 */
proto.iotics.api.FeedID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwinid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FeedID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FeedID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FeedID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FeedID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTwinid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHostid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.iotics.api.FeedID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.FeedID} returns this
 */
proto.iotics.api.FeedID.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string twinId = 2;
 * @return {string}
 */
proto.iotics.api.FeedID.prototype.getTwinid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.FeedID} returns this
 */
proto.iotics.api.FeedID.prototype.setTwinid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hostId = 3;
 * @return {string}
 */
proto.iotics.api.FeedID.prototype.getHostid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.FeedID} returns this
 */
proto.iotics.api.FeedID.prototype.setHostid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateFeedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateFeedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateFeedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.CreateFeedRequest.Arguments.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.CreateFeedRequest.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateFeedRequest}
 */
proto.iotics.api.CreateFeedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateFeedRequest;
  return proto.iotics.api.CreateFeedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateFeedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateFeedRequest}
 */
proto.iotics.api.CreateFeedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.CreateFeedRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.CreateFeedRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    case 3:
      var value = new proto.iotics.api.CreateFeedRequest.Payload;
      reader.readMessage(value,proto.iotics.api.CreateFeedRequest.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateFeedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateFeedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateFeedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.CreateFeedRequest.Arguments.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.CreateFeedRequest.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateFeedRequest.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateFeedRequest.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateFeedRequest.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedRequest.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateFeedRequest.Payload}
 */
proto.iotics.api.CreateFeedRequest.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateFeedRequest.Payload;
  return proto.iotics.api.CreateFeedRequest.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateFeedRequest.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateFeedRequest.Payload}
 */
proto.iotics.api.CreateFeedRequest.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateFeedRequest.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateFeedRequest.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateFeedRequest.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedRequest.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.iotics.api.CreateFeedRequest.Payload.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.CreateFeedRequest.Payload} returns this
 */
proto.iotics.api.CreateFeedRequest.Payload.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateFeedRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateFeedRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateFeedRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateFeedRequest.Arguments}
 */
proto.iotics.api.CreateFeedRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateFeedRequest.Arguments;
  return proto.iotics.api.CreateFeedRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateFeedRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateFeedRequest.Arguments}
 */
proto.iotics.api.CreateFeedRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateFeedRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateFeedRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateFeedRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.CreateFeedRequest.Arguments.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.CreateFeedRequest.Arguments} returns this
*/
proto.iotics.api.CreateFeedRequest.Arguments.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateFeedRequest.Arguments} returns this
 */
proto.iotics.api.CreateFeedRequest.Arguments.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateFeedRequest.Arguments.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.CreateFeedRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.CreateFeedRequest} returns this
*/
proto.iotics.api.CreateFeedRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateFeedRequest} returns this
 */
proto.iotics.api.CreateFeedRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateFeedRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.CreateFeedRequest.Arguments}
 */
proto.iotics.api.CreateFeedRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.CreateFeedRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.CreateFeedRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.CreateFeedRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.CreateFeedRequest} returns this
*/
proto.iotics.api.CreateFeedRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateFeedRequest} returns this
 */
proto.iotics.api.CreateFeedRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateFeedRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 3;
 * @return {?proto.iotics.api.CreateFeedRequest.Payload}
 */
proto.iotics.api.CreateFeedRequest.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.CreateFeedRequest.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.CreateFeedRequest.Payload, 3));
};


/**
 * @param {?proto.iotics.api.CreateFeedRequest.Payload|undefined} value
 * @return {!proto.iotics.api.CreateFeedRequest} returns this
*/
proto.iotics.api.CreateFeedRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateFeedRequest} returns this
 */
proto.iotics.api.CreateFeedRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateFeedRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateFeedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateFeedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateFeedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.CreateFeedResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateFeedResponse}
 */
proto.iotics.api.CreateFeedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateFeedResponse;
  return proto.iotics.api.CreateFeedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateFeedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateFeedResponse}
 */
proto.iotics.api.CreateFeedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.CreateFeedResponse.Payload;
      reader.readMessage(value,proto.iotics.api.CreateFeedResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateFeedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateFeedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateFeedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.CreateFeedResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateFeedResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateFeedResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateFeedResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateFeedResponse.Payload}
 */
proto.iotics.api.CreateFeedResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateFeedResponse.Payload;
  return proto.iotics.api.CreateFeedResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateFeedResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateFeedResponse.Payload}
 */
proto.iotics.api.CreateFeedResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateFeedResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateFeedResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateFeedResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateFeedResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.CreateFeedResponse.Payload.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.CreateFeedResponse.Payload} returns this
*/
proto.iotics.api.CreateFeedResponse.Payload.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateFeedResponse.Payload} returns this
 */
proto.iotics.api.CreateFeedResponse.Payload.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateFeedResponse.Payload.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.CreateFeedResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.CreateFeedResponse} returns this
*/
proto.iotics.api.CreateFeedResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateFeedResponse} returns this
 */
proto.iotics.api.CreateFeedResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateFeedResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.CreateFeedResponse.Payload}
 */
proto.iotics.api.CreateFeedResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.CreateFeedResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.CreateFeedResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.CreateFeedResponse.Payload|undefined} value
 * @return {!proto.iotics.api.CreateFeedResponse} returns this
*/
proto.iotics.api.CreateFeedResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateFeedResponse} returns this
 */
proto.iotics.api.CreateFeedResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateFeedResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteFeedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteFeedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteFeedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.DeleteFeedRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteFeedRequest}
 */
proto.iotics.api.DeleteFeedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteFeedRequest;
  return proto.iotics.api.DeleteFeedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteFeedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteFeedRequest}
 */
proto.iotics.api.DeleteFeedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DeleteFeedRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.DeleteFeedRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteFeedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteFeedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteFeedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DeleteFeedRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteFeedRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteFeedRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteFeedRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteFeedRequest.Arguments}
 */
proto.iotics.api.DeleteFeedRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteFeedRequest.Arguments;
  return proto.iotics.api.DeleteFeedRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteFeedRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteFeedRequest.Arguments}
 */
proto.iotics.api.DeleteFeedRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteFeedRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteFeedRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteFeedRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.DeleteFeedRequest.Arguments.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.DeleteFeedRequest.Arguments} returns this
*/
proto.iotics.api.DeleteFeedRequest.Arguments.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteFeedRequest.Arguments} returns this
 */
proto.iotics.api.DeleteFeedRequest.Arguments.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteFeedRequest.Arguments.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DeleteFeedRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DeleteFeedRequest} returns this
*/
proto.iotics.api.DeleteFeedRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteFeedRequest} returns this
 */
proto.iotics.api.DeleteFeedRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteFeedRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.DeleteFeedRequest.Arguments}
 */
proto.iotics.api.DeleteFeedRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.DeleteFeedRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DeleteFeedRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.DeleteFeedRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.DeleteFeedRequest} returns this
*/
proto.iotics.api.DeleteFeedRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteFeedRequest} returns this
 */
proto.iotics.api.DeleteFeedRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteFeedRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteFeedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteFeedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteFeedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.DeleteFeedResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteFeedResponse}
 */
proto.iotics.api.DeleteFeedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteFeedResponse;
  return proto.iotics.api.DeleteFeedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteFeedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteFeedResponse}
 */
proto.iotics.api.DeleteFeedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DeleteFeedResponse.Payload;
      reader.readMessage(value,proto.iotics.api.DeleteFeedResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteFeedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteFeedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteFeedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DeleteFeedResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteFeedResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteFeedResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteFeedResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteFeedResponse.Payload}
 */
proto.iotics.api.DeleteFeedResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteFeedResponse.Payload;
  return proto.iotics.api.DeleteFeedResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteFeedResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteFeedResponse.Payload}
 */
proto.iotics.api.DeleteFeedResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteFeedResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteFeedResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteFeedResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteFeedResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.DeleteFeedResponse.Payload.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.DeleteFeedResponse.Payload} returns this
*/
proto.iotics.api.DeleteFeedResponse.Payload.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteFeedResponse.Payload} returns this
 */
proto.iotics.api.DeleteFeedResponse.Payload.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteFeedResponse.Payload.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DeleteFeedResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DeleteFeedResponse} returns this
*/
proto.iotics.api.DeleteFeedResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteFeedResponse} returns this
 */
proto.iotics.api.DeleteFeedResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteFeedResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.DeleteFeedResponse.Payload}
 */
proto.iotics.api.DeleteFeedResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.DeleteFeedResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DeleteFeedResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.DeleteFeedResponse.Payload|undefined} value
 * @return {!proto.iotics.api.DeleteFeedResponse} returns this
*/
proto.iotics.api.DeleteFeedResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteFeedResponse} returns this
 */
proto.iotics.api.DeleteFeedResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteFeedResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateFeedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateFeedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateFeedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.UpdateFeedRequest.Arguments.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.UpdateFeedRequest.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateFeedRequest}
 */
proto.iotics.api.UpdateFeedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateFeedRequest;
  return proto.iotics.api.UpdateFeedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateFeedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateFeedRequest}
 */
proto.iotics.api.UpdateFeedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.UpdateFeedRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.UpdateFeedRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    case 3:
      var value = new proto.iotics.api.UpdateFeedRequest.Payload;
      reader.readMessage(value,proto.iotics.api.UpdateFeedRequest.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateFeedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateFeedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateFeedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.UpdateFeedRequest.Arguments.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.UpdateFeedRequest.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateFeedRequest.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateFeedRequest.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedRequest.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    storelast: (f = msg.getStorelast()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    values: (f = msg.getValues()) && iotics_api_common_pb.Values.toObject(includeInstance, f),
    properties: (f = msg.getProperties()) && iotics_api_common_pb.PropertyUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload}
 */
proto.iotics.api.UpdateFeedRequest.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateFeedRequest.Payload;
  return proto.iotics.api.UpdateFeedRequest.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateFeedRequest.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload}
 */
proto.iotics.api.UpdateFeedRequest.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setStorelast(value);
      break;
    case 3:
      var value = new iotics_api_common_pb.Values;
      reader.readMessage(value,iotics_api_common_pb.Values.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    case 6:
      var value = new iotics_api_common_pb.PropertyUpdate;
      reader.readMessage(value,iotics_api_common_pb.PropertyUpdate.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateFeedRequest.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateFeedRequest.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedRequest.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStorelast();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      iotics_api_common_pb.Values.serializeBinaryToWriter
    );
  }
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      iotics_api_common_pb.PropertyUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.BoolValue storeLast = 1;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.getStorelast = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 1));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload} returns this
*/
proto.iotics.api.UpdateFeedRequest.Payload.prototype.setStorelast = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload} returns this
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.clearStorelast = function() {
  return this.setStorelast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.hasStorelast = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Values values = 3;
 * @return {?proto.iotics.api.Values}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.getValues = function() {
  return /** @type{?proto.iotics.api.Values} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Values, 3));
};


/**
 * @param {?proto.iotics.api.Values|undefined} value
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload} returns this
*/
proto.iotics.api.UpdateFeedRequest.Payload.prototype.setValues = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload} returns this
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.clearValues = function() {
  return this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.hasValues = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PropertyUpdate properties = 6;
 * @return {?proto.iotics.api.PropertyUpdate}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.getProperties = function() {
  return /** @type{?proto.iotics.api.PropertyUpdate} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.PropertyUpdate, 6));
};


/**
 * @param {?proto.iotics.api.PropertyUpdate|undefined} value
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload} returns this
*/
proto.iotics.api.UpdateFeedRequest.Payload.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedRequest.Payload} returns this
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedRequest.Payload.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateFeedRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateFeedRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateFeedRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateFeedRequest.Arguments}
 */
proto.iotics.api.UpdateFeedRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateFeedRequest.Arguments;
  return proto.iotics.api.UpdateFeedRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateFeedRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateFeedRequest.Arguments}
 */
proto.iotics.api.UpdateFeedRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateFeedRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateFeedRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateFeedRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.UpdateFeedRequest.Arguments.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.UpdateFeedRequest.Arguments} returns this
*/
proto.iotics.api.UpdateFeedRequest.Arguments.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedRequest.Arguments} returns this
 */
proto.iotics.api.UpdateFeedRequest.Arguments.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedRequest.Arguments.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.UpdateFeedRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.UpdateFeedRequest} returns this
*/
proto.iotics.api.UpdateFeedRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedRequest} returns this
 */
proto.iotics.api.UpdateFeedRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.UpdateFeedRequest.Arguments}
 */
proto.iotics.api.UpdateFeedRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.UpdateFeedRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpdateFeedRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.UpdateFeedRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.UpdateFeedRequest} returns this
*/
proto.iotics.api.UpdateFeedRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedRequest} returns this
 */
proto.iotics.api.UpdateFeedRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 3;
 * @return {?proto.iotics.api.UpdateFeedRequest.Payload}
 */
proto.iotics.api.UpdateFeedRequest.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.UpdateFeedRequest.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpdateFeedRequest.Payload, 3));
};


/**
 * @param {?proto.iotics.api.UpdateFeedRequest.Payload|undefined} value
 * @return {!proto.iotics.api.UpdateFeedRequest} returns this
*/
proto.iotics.api.UpdateFeedRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedRequest} returns this
 */
proto.iotics.api.UpdateFeedRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateFeedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateFeedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateFeedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.UpdateFeedResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateFeedResponse}
 */
proto.iotics.api.UpdateFeedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateFeedResponse;
  return proto.iotics.api.UpdateFeedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateFeedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateFeedResponse}
 */
proto.iotics.api.UpdateFeedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.UpdateFeedResponse.Payload;
      reader.readMessage(value,proto.iotics.api.UpdateFeedResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateFeedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateFeedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateFeedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.UpdateFeedResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateFeedResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateFeedResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateFeedResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateFeedResponse.Payload}
 */
proto.iotics.api.UpdateFeedResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateFeedResponse.Payload;
  return proto.iotics.api.UpdateFeedResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateFeedResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateFeedResponse.Payload}
 */
proto.iotics.api.UpdateFeedResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateFeedResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateFeedResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateFeedResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateFeedResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.UpdateFeedResponse.Payload.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.UpdateFeedResponse.Payload} returns this
*/
proto.iotics.api.UpdateFeedResponse.Payload.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedResponse.Payload} returns this
 */
proto.iotics.api.UpdateFeedResponse.Payload.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedResponse.Payload.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.UpdateFeedResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.UpdateFeedResponse} returns this
*/
proto.iotics.api.UpdateFeedResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedResponse} returns this
 */
proto.iotics.api.UpdateFeedResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.UpdateFeedResponse.Payload}
 */
proto.iotics.api.UpdateFeedResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.UpdateFeedResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpdateFeedResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.UpdateFeedResponse.Payload|undefined} value
 * @return {!proto.iotics.api.UpdateFeedResponse} returns this
*/
proto.iotics.api.UpdateFeedResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateFeedResponse} returns this
 */
proto.iotics.api.UpdateFeedResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateFeedResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ShareFeedDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ShareFeedDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.ShareFeedDataRequest.Arguments.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.ShareFeedDataRequest.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ShareFeedDataRequest}
 */
proto.iotics.api.ShareFeedDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ShareFeedDataRequest;
  return proto.iotics.api.ShareFeedDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ShareFeedDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ShareFeedDataRequest}
 */
proto.iotics.api.ShareFeedDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.ShareFeedDataRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.ShareFeedDataRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    case 3:
      var value = new proto.iotics.api.ShareFeedDataRequest.Payload;
      reader.readMessage(value,proto.iotics.api.ShareFeedDataRequest.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ShareFeedDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ShareFeedDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.ShareFeedDataRequest.Arguments.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.ShareFeedDataRequest.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ShareFeedDataRequest.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ShareFeedDataRequest.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ShareFeedDataRequest.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataRequest.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    sample: (f = msg.getSample()) && iotics_api_common_pb.FeedData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ShareFeedDataRequest.Payload}
 */
proto.iotics.api.ShareFeedDataRequest.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ShareFeedDataRequest.Payload;
  return proto.iotics.api.ShareFeedDataRequest.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ShareFeedDataRequest.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ShareFeedDataRequest.Payload}
 */
proto.iotics.api.ShareFeedDataRequest.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.FeedData;
      reader.readMessage(value,iotics_api_common_pb.FeedData.deserializeBinaryFromReader);
      msg.setSample(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ShareFeedDataRequest.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ShareFeedDataRequest.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ShareFeedDataRequest.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataRequest.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSample();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.FeedData.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedData sample = 1;
 * @return {?proto.iotics.api.FeedData}
 */
proto.iotics.api.ShareFeedDataRequest.Payload.prototype.getSample = function() {
  return /** @type{?proto.iotics.api.FeedData} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.FeedData, 1));
};


/**
 * @param {?proto.iotics.api.FeedData|undefined} value
 * @return {!proto.iotics.api.ShareFeedDataRequest.Payload} returns this
*/
proto.iotics.api.ShareFeedDataRequest.Payload.prototype.setSample = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ShareFeedDataRequest.Payload} returns this
 */
proto.iotics.api.ShareFeedDataRequest.Payload.prototype.clearSample = function() {
  return this.setSample(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ShareFeedDataRequest.Payload.prototype.hasSample = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ShareFeedDataRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ShareFeedDataRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ShareFeedDataRequest.Arguments}
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ShareFeedDataRequest.Arguments;
  return proto.iotics.api.ShareFeedDataRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ShareFeedDataRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ShareFeedDataRequest.Arguments}
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ShareFeedDataRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ShareFeedDataRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.ShareFeedDataRequest.Arguments} returns this
*/
proto.iotics.api.ShareFeedDataRequest.Arguments.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ShareFeedDataRequest.Arguments} returns this
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ShareFeedDataRequest.Arguments.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ShareFeedDataRequest} returns this
*/
proto.iotics.api.ShareFeedDataRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ShareFeedDataRequest} returns this
 */
proto.iotics.api.ShareFeedDataRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.ShareFeedDataRequest.Arguments}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.ShareFeedDataRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.ShareFeedDataRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.ShareFeedDataRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.ShareFeedDataRequest} returns this
*/
proto.iotics.api.ShareFeedDataRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ShareFeedDataRequest} returns this
 */
proto.iotics.api.ShareFeedDataRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 3;
 * @return {?proto.iotics.api.ShareFeedDataRequest.Payload}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.ShareFeedDataRequest.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.ShareFeedDataRequest.Payload, 3));
};


/**
 * @param {?proto.iotics.api.ShareFeedDataRequest.Payload|undefined} value
 * @return {!proto.iotics.api.ShareFeedDataRequest} returns this
*/
proto.iotics.api.ShareFeedDataRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ShareFeedDataRequest} returns this
 */
proto.iotics.api.ShareFeedDataRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ShareFeedDataRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ShareFeedDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ShareFeedDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ShareFeedDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ShareFeedDataResponse}
 */
proto.iotics.api.ShareFeedDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ShareFeedDataResponse;
  return proto.iotics.api.ShareFeedDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ShareFeedDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ShareFeedDataResponse}
 */
proto.iotics.api.ShareFeedDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ShareFeedDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ShareFeedDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ShareFeedDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ShareFeedDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ShareFeedDataResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ShareFeedDataResponse} returns this
*/
proto.iotics.api.ShareFeedDataResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ShareFeedDataResponse} returns this
 */
proto.iotics.api.ShareFeedDataResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ShareFeedDataResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllFeedsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllFeedsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.ListAllFeedsRequest.Arguments.toObject(includeInstance, f),
    range: (f = msg.getRange()) && iotics_api_common_pb.Range.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllFeedsRequest}
 */
proto.iotics.api.ListAllFeedsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllFeedsRequest;
  return proto.iotics.api.ListAllFeedsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllFeedsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllFeedsRequest}
 */
proto.iotics.api.ListAllFeedsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.ListAllFeedsRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.ListAllFeedsRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    case 3:
      var value = new iotics_api_common_pb.Range;
      reader.readMessage(value,iotics_api_common_pb.Range.deserializeBinaryFromReader);
      msg.setRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllFeedsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllFeedsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.ListAllFeedsRequest.Arguments.serializeBinaryToWriter
    );
  }
  f = message.getRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      iotics_api_common_pb.Range.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllFeedsRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllFeedsRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllFeedsRequest.Arguments}
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllFeedsRequest.Arguments;
  return proto.iotics.api.ListAllFeedsRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllFeedsRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllFeedsRequest.Arguments}
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllFeedsRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllFeedsRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.ListAllFeedsRequest.Arguments} returns this
*/
proto.iotics.api.ListAllFeedsRequest.Arguments.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllFeedsRequest.Arguments} returns this
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllFeedsRequest.Arguments.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ListAllFeedsRequest} returns this
*/
proto.iotics.api.ListAllFeedsRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllFeedsRequest} returns this
 */
proto.iotics.api.ListAllFeedsRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.ListAllFeedsRequest.Arguments}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.ListAllFeedsRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.ListAllFeedsRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.ListAllFeedsRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.ListAllFeedsRequest} returns this
*/
proto.iotics.api.ListAllFeedsRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllFeedsRequest} returns this
 */
proto.iotics.api.ListAllFeedsRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Range range = 3;
 * @return {?proto.iotics.api.Range}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.getRange = function() {
  return /** @type{?proto.iotics.api.Range} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Range, 3));
};


/**
 * @param {?proto.iotics.api.Range|undefined} value
 * @return {!proto.iotics.api.ListAllFeedsRequest} returns this
*/
proto.iotics.api.ListAllFeedsRequest.prototype.setRange = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllFeedsRequest} returns this
 */
proto.iotics.api.ListAllFeedsRequest.prototype.clearRange = function() {
  return this.setRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllFeedsRequest.prototype.hasRange = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllFeedsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllFeedsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllFeedsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.ListAllFeedsResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllFeedsResponse}
 */
proto.iotics.api.ListAllFeedsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllFeedsResponse;
  return proto.iotics.api.ListAllFeedsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllFeedsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllFeedsResponse}
 */
proto.iotics.api.ListAllFeedsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.ListAllFeedsResponse.Payload;
      reader.readMessage(value,proto.iotics.api.ListAllFeedsResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllFeedsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllFeedsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllFeedsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.ListAllFeedsResponse.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.ListAllFeedsResponse.Payload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllFeedsResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllFeedsResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllFeedsResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedidsList: jspb.Message.toObjectList(msg.getFeedidsList(),
    proto.iotics.api.FeedID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllFeedsResponse.Payload}
 */
proto.iotics.api.ListAllFeedsResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllFeedsResponse.Payload;
  return proto.iotics.api.ListAllFeedsResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllFeedsResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllFeedsResponse.Payload}
 */
proto.iotics.api.ListAllFeedsResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.addFeedids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllFeedsResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllFeedsResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllFeedsResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllFeedsResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedidsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FeedID feedIds = 1;
 * @return {!Array<!proto.iotics.api.FeedID>}
 */
proto.iotics.api.ListAllFeedsResponse.Payload.prototype.getFeedidsList = function() {
  return /** @type{!Array<!proto.iotics.api.FeedID>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {!Array<!proto.iotics.api.FeedID>} value
 * @return {!proto.iotics.api.ListAllFeedsResponse.Payload} returns this
*/
proto.iotics.api.ListAllFeedsResponse.Payload.prototype.setFeedidsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotics.api.FeedID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.FeedID}
 */
proto.iotics.api.ListAllFeedsResponse.Payload.prototype.addFeedids = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotics.api.FeedID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.ListAllFeedsResponse.Payload} returns this
 */
proto.iotics.api.ListAllFeedsResponse.Payload.prototype.clearFeedidsList = function() {
  return this.setFeedidsList([]);
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ListAllFeedsResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ListAllFeedsResponse} returns this
*/
proto.iotics.api.ListAllFeedsResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllFeedsResponse} returns this
 */
proto.iotics.api.ListAllFeedsResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllFeedsResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.ListAllFeedsResponse.Payload}
 */
proto.iotics.api.ListAllFeedsResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.ListAllFeedsResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.ListAllFeedsResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.ListAllFeedsResponse.Payload|undefined} value
 * @return {!proto.iotics.api.ListAllFeedsResponse} returns this
*/
proto.iotics.api.ListAllFeedsResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllFeedsResponse} returns this
 */
proto.iotics.api.ListAllFeedsResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllFeedsResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeFeedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeFeedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeFeedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.DescribeFeedRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeFeedRequest}
 */
proto.iotics.api.DescribeFeedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeFeedRequest;
  return proto.iotics.api.DescribeFeedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeFeedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeFeedRequest}
 */
proto.iotics.api.DescribeFeedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 3:
      var value = new proto.iotics.api.DescribeFeedRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.DescribeFeedRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeFeedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeFeedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeFeedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.DescribeFeedRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeFeedRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeFeedRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeFeedRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeFeedRequest.Arguments}
 */
proto.iotics.api.DescribeFeedRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeFeedRequest.Arguments;
  return proto.iotics.api.DescribeFeedRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeFeedRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeFeedRequest.Arguments}
 */
proto.iotics.api.DescribeFeedRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeFeedRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeFeedRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeFeedRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.DescribeFeedRequest.Arguments.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.DescribeFeedRequest.Arguments} returns this
*/
proto.iotics.api.DescribeFeedRequest.Arguments.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeFeedRequest.Arguments} returns this
 */
proto.iotics.api.DescribeFeedRequest.Arguments.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedRequest.Arguments.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DescribeFeedRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DescribeFeedRequest} returns this
*/
proto.iotics.api.DescribeFeedRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeFeedRequest} returns this
 */
proto.iotics.api.DescribeFeedRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 3;
 * @return {?proto.iotics.api.DescribeFeedRequest.Arguments}
 */
proto.iotics.api.DescribeFeedRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.DescribeFeedRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeFeedRequest.Arguments, 3));
};


/**
 * @param {?proto.iotics.api.DescribeFeedRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.DescribeFeedRequest} returns this
*/
proto.iotics.api.DescribeFeedRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeFeedRequest} returns this
 */
proto.iotics.api.DescribeFeedRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeFeedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeFeedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeFeedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.DescribeFeedResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeFeedResponse}
 */
proto.iotics.api.DescribeFeedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeFeedResponse;
  return proto.iotics.api.DescribeFeedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeFeedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeFeedResponse}
 */
proto.iotics.api.DescribeFeedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DescribeFeedResponse.Payload;
      reader.readMessage(value,proto.iotics.api.DescribeFeedResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeFeedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeFeedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeFeedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DescribeFeedResponse.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.repeatedFields_ = [2,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeFeedResponse.MetaResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeFeedResponse.MetaResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    iotics_api_common_pb.Value.toObject, includeInstance),
    storelast: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    iotics_api_common_pb.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeFeedResponse.MetaResult}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeFeedResponse.MetaResult;
  return proto.iotics.api.DescribeFeedResponse.MetaResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeFeedResponse.MetaResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeFeedResponse.MetaResult}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new iotics_api_common_pb.Value;
      reader.readMessage(value,iotics_api_common_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStorelast(value);
      break;
    case 6:
      var value = new iotics_api_common_pb.Property;
      reader.readMessage(value,iotics_api_common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeFeedResponse.MetaResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeFeedResponse.MetaResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      iotics_api_common_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getStorelast();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      iotics_api_common_pb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Value values = 2;
 * @return {!Array<!proto.iotics.api.Value>}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.iotics.api.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Value, 2));
};


/**
 * @param {!Array<!proto.iotics.api.Value>} value
 * @return {!proto.iotics.api.DescribeFeedResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.iotics.api.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Value}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iotics.api.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.DescribeFeedResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional bool storeLast = 5;
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.getStorelast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.iotics.api.DescribeFeedResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.setStorelast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated Property properties = 6;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Property, 6));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.DescribeFeedResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.DescribeFeedResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeFeedResponse.MetaResult.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeFeedResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeFeedResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && proto.iotics.api.FeedID.toObject(includeInstance, f),
    result: (f = msg.getResult()) && proto.iotics.api.DescribeFeedResponse.MetaResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeFeedResponse.Payload}
 */
proto.iotics.api.DescribeFeedResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeFeedResponse.Payload;
  return proto.iotics.api.DescribeFeedResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeFeedResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeFeedResponse.Payload}
 */
proto.iotics.api.DescribeFeedResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.FeedID;
      reader.readMessage(value,proto.iotics.api.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    case 2:
      var value = new proto.iotics.api.DescribeFeedResponse.MetaResult;
      reader.readMessage(value,proto.iotics.api.DescribeFeedResponse.MetaResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeFeedResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeFeedResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeFeedResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.FeedID.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DescribeFeedResponse.MetaResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.DescribeFeedResponse.Payload} returns this
*/
proto.iotics.api.DescribeFeedResponse.Payload.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeFeedResponse.Payload} returns this
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MetaResult result = 2;
 * @return {?proto.iotics.api.DescribeFeedResponse.MetaResult}
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.getResult = function() {
  return /** @type{?proto.iotics.api.DescribeFeedResponse.MetaResult} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeFeedResponse.MetaResult, 2));
};


/**
 * @param {?proto.iotics.api.DescribeFeedResponse.MetaResult|undefined} value
 * @return {!proto.iotics.api.DescribeFeedResponse.Payload} returns this
*/
proto.iotics.api.DescribeFeedResponse.Payload.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeFeedResponse.Payload} returns this
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedResponse.Payload.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DescribeFeedResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DescribeFeedResponse} returns this
*/
proto.iotics.api.DescribeFeedResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeFeedResponse} returns this
 */
proto.iotics.api.DescribeFeedResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.DescribeFeedResponse.Payload}
 */
proto.iotics.api.DescribeFeedResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.DescribeFeedResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeFeedResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.DescribeFeedResponse.Payload|undefined} value
 * @return {!proto.iotics.api.DescribeFeedResponse} returns this
*/
proto.iotics.api.DescribeFeedResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeFeedResponse} returns this
 */
proto.iotics.api.DescribeFeedResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeFeedResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.UpsertFeedWithMeta.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpsertFeedWithMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpsertFeedWithMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertFeedWithMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storelast: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    iotics_api_common_pb.Value.toObject, includeInstance),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    iotics_api_common_pb.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpsertFeedWithMeta}
 */
proto.iotics.api.UpsertFeedWithMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpsertFeedWithMeta;
  return proto.iotics.api.UpsertFeedWithMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpsertFeedWithMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpsertFeedWithMeta}
 */
proto.iotics.api.UpsertFeedWithMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStorelast(value);
      break;
    case 5:
      var value = new iotics_api_common_pb.Value;
      reader.readMessage(value,iotics_api_common_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 6:
      var value = new iotics_api_common_pb.Property;
      reader.readMessage(value,iotics_api_common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpsertFeedWithMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpsertFeedWithMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertFeedWithMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStorelast();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      iotics_api_common_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      iotics_api_common_pb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.UpsertFeedWithMeta} returns this
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool storeLast = 4;
 * @return {boolean}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.getStorelast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.iotics.api.UpsertFeedWithMeta} returns this
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.setStorelast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated Value values = 5;
 * @return {!Array<!proto.iotics.api.Value>}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.iotics.api.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Value, 5));
};


/**
 * @param {!Array<!proto.iotics.api.Value>} value
 * @return {!proto.iotics.api.UpsertFeedWithMeta} returns this
*/
proto.iotics.api.UpsertFeedWithMeta.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.iotics.api.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Value}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.iotics.api.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.UpsertFeedWithMeta} returns this
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * repeated Property properties = 6;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Property, 6));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.UpsertFeedWithMeta} returns this
*/
proto.iotics.api.UpsertFeedWithMeta.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.UpsertFeedWithMeta} returns this
 */
proto.iotics.api.UpsertFeedWithMeta.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


goog.object.extend(exports, proto.iotics.api);

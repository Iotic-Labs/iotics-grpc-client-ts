// source: iotics/api/interest.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var iotics_api_common_pb = require('../../iotics/api/common_pb.js');
goog.object.extend(proto, iotics_api_common_pb);
var iotics_api_feed_pb = require('../../iotics/api/feed_pb.js');
goog.object.extend(proto, iotics_api_feed_pb);
var iotics_api_input_pb = require('../../iotics/api/input_pb.js');
goog.object.extend(proto, iotics_api_input_pb);
goog.exportSymbol('proto.iotics.api.FetchInterestRequest', null, global);
goog.exportSymbol('proto.iotics.api.FetchInterestRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.FetchInterestResponse', null, global);
goog.exportSymbol('proto.iotics.api.FetchInterestResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.FetchLastStoredRequest', null, global);
goog.exportSymbol('proto.iotics.api.FetchLastStoredRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.InputInterest', null, global);
goog.exportSymbol('proto.iotics.api.Interest', null, global);
goog.exportSymbol('proto.iotics.api.SendInputMessageRequest', null, global);
goog.exportSymbol('proto.iotics.api.SendInputMessageRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.SendInputMessageRequest.Payload', null, global);
goog.exportSymbol('proto.iotics.api.SendInputMessageResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.InputInterest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.InputInterest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.InputInterest.displayName = 'proto.iotics.api.InputInterest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.SendInputMessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.SendInputMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.SendInputMessageRequest.displayName = 'proto.iotics.api.SendInputMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.SendInputMessageRequest.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.SendInputMessageRequest.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.SendInputMessageRequest.Payload.displayName = 'proto.iotics.api.SendInputMessageRequest.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.SendInputMessageRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.SendInputMessageRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.SendInputMessageRequest.Arguments.displayName = 'proto.iotics.api.SendInputMessageRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.SendInputMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.SendInputMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.SendInputMessageResponse.displayName = 'proto.iotics.api.SendInputMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Interest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.Interest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Interest.displayName = 'proto.iotics.api.Interest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FetchInterestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FetchInterestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FetchInterestRequest.displayName = 'proto.iotics.api.FetchInterestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FetchInterestRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FetchInterestRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FetchInterestRequest.Arguments.displayName = 'proto.iotics.api.FetchInterestRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FetchInterestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FetchInterestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FetchInterestResponse.displayName = 'proto.iotics.api.FetchInterestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FetchInterestResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FetchInterestResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FetchInterestResponse.Payload.displayName = 'proto.iotics.api.FetchInterestResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FetchLastStoredRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FetchLastStoredRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FetchLastStoredRequest.displayName = 'proto.iotics.api.FetchLastStoredRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FetchLastStoredRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FetchLastStoredRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FetchLastStoredRequest.Arguments.displayName = 'proto.iotics.api.FetchLastStoredRequest.Arguments';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.InputInterest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.InputInterest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.InputInterest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputInterest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sendertwinid: (f = msg.getSendertwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f),
    destinputid: (f = msg.getDestinputid()) && iotics_api_input_pb.InputID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.InputInterest}
 */
proto.iotics.api.InputInterest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.InputInterest;
  return proto.iotics.api.InputInterest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.InputInterest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.InputInterest}
 */
proto.iotics.api.InputInterest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setSendertwinid(value);
      break;
    case 2:
      var value = new iotics_api_input_pb.InputID;
      reader.readMessage(value,iotics_api_input_pb.InputID.deserializeBinaryFromReader);
      msg.setDestinputid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.InputInterest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.InputInterest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.InputInterest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputInterest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSendertwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
  f = message.getDestinputid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      iotics_api_input_pb.InputID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID senderTwinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.InputInterest.prototype.getSendertwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.InputInterest} returns this
*/
proto.iotics.api.InputInterest.prototype.setSendertwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.InputInterest} returns this
 */
proto.iotics.api.InputInterest.prototype.clearSendertwinid = function() {
  return this.setSendertwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.InputInterest.prototype.hasSendertwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InputID destInputId = 2;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.InputInterest.prototype.getDestinputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, iotics_api_input_pb.InputID, 2));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.InputInterest} returns this
*/
proto.iotics.api.InputInterest.prototype.setDestinputid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.InputInterest} returns this
 */
proto.iotics.api.InputInterest.prototype.clearDestinputid = function() {
  return this.setDestinputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.InputInterest.prototype.hasDestinputid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.SendInputMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.SendInputMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.SendInputMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.SendInputMessageRequest.Arguments.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.SendInputMessageRequest.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.SendInputMessageRequest}
 */
proto.iotics.api.SendInputMessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.SendInputMessageRequest;
  return proto.iotics.api.SendInputMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.SendInputMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.SendInputMessageRequest}
 */
proto.iotics.api.SendInputMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.SendInputMessageRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.SendInputMessageRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    case 3:
      var value = new proto.iotics.api.SendInputMessageRequest.Payload;
      reader.readMessage(value,proto.iotics.api.SendInputMessageRequest.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.SendInputMessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.SendInputMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.SendInputMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.SendInputMessageRequest.Arguments.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.SendInputMessageRequest.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.SendInputMessageRequest.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.SendInputMessageRequest.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.SendInputMessageRequest.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageRequest.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && iotics_api_input_pb.InputMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.SendInputMessageRequest.Payload}
 */
proto.iotics.api.SendInputMessageRequest.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.SendInputMessageRequest.Payload;
  return proto.iotics.api.SendInputMessageRequest.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.SendInputMessageRequest.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.SendInputMessageRequest.Payload}
 */
proto.iotics.api.SendInputMessageRequest.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_input_pb.InputMessage;
      reader.readMessage(value,iotics_api_input_pb.InputMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.SendInputMessageRequest.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.SendInputMessageRequest.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.SendInputMessageRequest.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageRequest.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_input_pb.InputMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputMessage message = 1;
 * @return {?proto.iotics.api.InputMessage}
 */
proto.iotics.api.SendInputMessageRequest.Payload.prototype.getMessage = function() {
  return /** @type{?proto.iotics.api.InputMessage} */ (
    jspb.Message.getWrapperField(this, iotics_api_input_pb.InputMessage, 1));
};


/**
 * @param {?proto.iotics.api.InputMessage|undefined} value
 * @return {!proto.iotics.api.SendInputMessageRequest.Payload} returns this
*/
proto.iotics.api.SendInputMessageRequest.Payload.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.SendInputMessageRequest.Payload} returns this
 */
proto.iotics.api.SendInputMessageRequest.Payload.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.SendInputMessageRequest.Payload.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.SendInputMessageRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.SendInputMessageRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.SendInputMessageRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    interest: (f = msg.getInterest()) && proto.iotics.api.InputInterest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.SendInputMessageRequest.Arguments}
 */
proto.iotics.api.SendInputMessageRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.SendInputMessageRequest.Arguments;
  return proto.iotics.api.SendInputMessageRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.SendInputMessageRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.SendInputMessageRequest.Arguments}
 */
proto.iotics.api.SendInputMessageRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.InputInterest;
      reader.readMessage(value,proto.iotics.api.InputInterest.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.SendInputMessageRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.SendInputMessageRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.SendInputMessageRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.InputInterest.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputInterest interest = 1;
 * @return {?proto.iotics.api.InputInterest}
 */
proto.iotics.api.SendInputMessageRequest.Arguments.prototype.getInterest = function() {
  return /** @type{?proto.iotics.api.InputInterest} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.InputInterest, 1));
};


/**
 * @param {?proto.iotics.api.InputInterest|undefined} value
 * @return {!proto.iotics.api.SendInputMessageRequest.Arguments} returns this
*/
proto.iotics.api.SendInputMessageRequest.Arguments.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.SendInputMessageRequest.Arguments} returns this
 */
proto.iotics.api.SendInputMessageRequest.Arguments.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.SendInputMessageRequest.Arguments.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.SendInputMessageRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.SendInputMessageRequest} returns this
*/
proto.iotics.api.SendInputMessageRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.SendInputMessageRequest} returns this
 */
proto.iotics.api.SendInputMessageRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.SendInputMessageRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.SendInputMessageRequest.Arguments}
 */
proto.iotics.api.SendInputMessageRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.SendInputMessageRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.SendInputMessageRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.SendInputMessageRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.SendInputMessageRequest} returns this
*/
proto.iotics.api.SendInputMessageRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.SendInputMessageRequest} returns this
 */
proto.iotics.api.SendInputMessageRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.SendInputMessageRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 3;
 * @return {?proto.iotics.api.SendInputMessageRequest.Payload}
 */
proto.iotics.api.SendInputMessageRequest.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.SendInputMessageRequest.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.SendInputMessageRequest.Payload, 3));
};


/**
 * @param {?proto.iotics.api.SendInputMessageRequest.Payload|undefined} value
 * @return {!proto.iotics.api.SendInputMessageRequest} returns this
*/
proto.iotics.api.SendInputMessageRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.SendInputMessageRequest} returns this
 */
proto.iotics.api.SendInputMessageRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.SendInputMessageRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.SendInputMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.SendInputMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.SendInputMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.SendInputMessageResponse}
 */
proto.iotics.api.SendInputMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.SendInputMessageResponse;
  return proto.iotics.api.SendInputMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.SendInputMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.SendInputMessageResponse}
 */
proto.iotics.api.SendInputMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.SendInputMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.SendInputMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.SendInputMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SendInputMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.SendInputMessageResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.SendInputMessageResponse} returns this
*/
proto.iotics.api.SendInputMessageResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.SendInputMessageResponse} returns this
 */
proto.iotics.api.SendInputMessageResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.SendInputMessageResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Interest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Interest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Interest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Interest.toObject = function(includeInstance, msg) {
  var f, obj = {
    followertwinid: (f = msg.getFollowertwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f),
    followedfeedid: (f = msg.getFollowedfeedid()) && iotics_api_feed_pb.FeedID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Interest}
 */
proto.iotics.api.Interest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Interest;
  return proto.iotics.api.Interest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Interest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Interest}
 */
proto.iotics.api.Interest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setFollowertwinid(value);
      break;
    case 2:
      var value = new iotics_api_feed_pb.FeedID;
      reader.readMessage(value,iotics_api_feed_pb.FeedID.deserializeBinaryFromReader);
      msg.setFollowedfeedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Interest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Interest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Interest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Interest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFollowertwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
  f = message.getFollowedfeedid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      iotics_api_feed_pb.FeedID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID followerTwinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.Interest.prototype.getFollowertwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.Interest} returns this
*/
proto.iotics.api.Interest.prototype.setFollowertwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Interest} returns this
 */
proto.iotics.api.Interest.prototype.clearFollowertwinid = function() {
  return this.setFollowertwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Interest.prototype.hasFollowertwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeedID followedFeedId = 2;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.Interest.prototype.getFollowedfeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, iotics_api_feed_pb.FeedID, 2));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.Interest} returns this
*/
proto.iotics.api.Interest.prototype.setFollowedfeedid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Interest} returns this
 */
proto.iotics.api.Interest.prototype.clearFollowedfeedid = function() {
  return this.setFollowedfeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Interest.prototype.hasFollowedfeedid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FetchInterestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FetchInterestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FetchInterestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.FetchInterestRequest.Arguments.toObject(includeInstance, f),
    fetchlaststored: (f = msg.getFetchlaststored()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FetchInterestRequest}
 */
proto.iotics.api.FetchInterestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FetchInterestRequest;
  return proto.iotics.api.FetchInterestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FetchInterestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FetchInterestRequest}
 */
proto.iotics.api.FetchInterestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.FetchInterestRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.FetchInterestRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setFetchlaststored(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FetchInterestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FetchInterestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FetchInterestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.FetchInterestRequest.Arguments.serializeBinaryToWriter
    );
  }
  f = message.getFetchlaststored();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FetchInterestRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FetchInterestRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FetchInterestRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    interest: (f = msg.getInterest()) && proto.iotics.api.Interest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FetchInterestRequest.Arguments}
 */
proto.iotics.api.FetchInterestRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FetchInterestRequest.Arguments;
  return proto.iotics.api.FetchInterestRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FetchInterestRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FetchInterestRequest.Arguments}
 */
proto.iotics.api.FetchInterestRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.Interest;
      reader.readMessage(value,proto.iotics.api.Interest.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FetchInterestRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FetchInterestRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FetchInterestRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.Interest.serializeBinaryToWriter
    );
  }
};


/**
 * optional Interest interest = 1;
 * @return {?proto.iotics.api.Interest}
 */
proto.iotics.api.FetchInterestRequest.Arguments.prototype.getInterest = function() {
  return /** @type{?proto.iotics.api.Interest} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.Interest, 1));
};


/**
 * @param {?proto.iotics.api.Interest|undefined} value
 * @return {!proto.iotics.api.FetchInterestRequest.Arguments} returns this
*/
proto.iotics.api.FetchInterestRequest.Arguments.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestRequest.Arguments} returns this
 */
proto.iotics.api.FetchInterestRequest.Arguments.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestRequest.Arguments.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.FetchInterestRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.FetchInterestRequest} returns this
*/
proto.iotics.api.FetchInterestRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestRequest} returns this
 */
proto.iotics.api.FetchInterestRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.FetchInterestRequest.Arguments}
 */
proto.iotics.api.FetchInterestRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.FetchInterestRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FetchInterestRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.FetchInterestRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.FetchInterestRequest} returns this
*/
proto.iotics.api.FetchInterestRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestRequest} returns this
 */
proto.iotics.api.FetchInterestRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.BoolValue fetchLastStored = 3;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.iotics.api.FetchInterestRequest.prototype.getFetchlaststored = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 3));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.iotics.api.FetchInterestRequest} returns this
*/
proto.iotics.api.FetchInterestRequest.prototype.setFetchlaststored = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestRequest} returns this
 */
proto.iotics.api.FetchInterestRequest.prototype.clearFetchlaststored = function() {
  return this.setFetchlaststored(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestRequest.prototype.hasFetchlaststored = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FetchInterestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FetchInterestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FetchInterestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.FetchInterestResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FetchInterestResponse}
 */
proto.iotics.api.FetchInterestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FetchInterestResponse;
  return proto.iotics.api.FetchInterestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FetchInterestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FetchInterestResponse}
 */
proto.iotics.api.FetchInterestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.FetchInterestResponse.Payload;
      reader.readMessage(value,proto.iotics.api.FetchInterestResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FetchInterestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FetchInterestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FetchInterestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.FetchInterestResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FetchInterestResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FetchInterestResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    interest: (f = msg.getInterest()) && proto.iotics.api.Interest.toObject(includeInstance, f),
    feeddata: (f = msg.getFeeddata()) && iotics_api_common_pb.FeedData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FetchInterestResponse.Payload}
 */
proto.iotics.api.FetchInterestResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FetchInterestResponse.Payload;
  return proto.iotics.api.FetchInterestResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FetchInterestResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FetchInterestResponse.Payload}
 */
proto.iotics.api.FetchInterestResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.Interest;
      reader.readMessage(value,proto.iotics.api.Interest.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    case 2:
      var value = new iotics_api_common_pb.FeedData;
      reader.readMessage(value,iotics_api_common_pb.FeedData.deserializeBinaryFromReader);
      msg.setFeeddata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FetchInterestResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FetchInterestResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchInterestResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.Interest.serializeBinaryToWriter
    );
  }
  f = message.getFeeddata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      iotics_api_common_pb.FeedData.serializeBinaryToWriter
    );
  }
};


/**
 * optional Interest interest = 1;
 * @return {?proto.iotics.api.Interest}
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.getInterest = function() {
  return /** @type{?proto.iotics.api.Interest} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.Interest, 1));
};


/**
 * @param {?proto.iotics.api.Interest|undefined} value
 * @return {!proto.iotics.api.FetchInterestResponse.Payload} returns this
*/
proto.iotics.api.FetchInterestResponse.Payload.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestResponse.Payload} returns this
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeedData feedData = 2;
 * @return {?proto.iotics.api.FeedData}
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.getFeeddata = function() {
  return /** @type{?proto.iotics.api.FeedData} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.FeedData, 2));
};


/**
 * @param {?proto.iotics.api.FeedData|undefined} value
 * @return {!proto.iotics.api.FetchInterestResponse.Payload} returns this
*/
proto.iotics.api.FetchInterestResponse.Payload.prototype.setFeeddata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestResponse.Payload} returns this
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.clearFeeddata = function() {
  return this.setFeeddata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestResponse.Payload.prototype.hasFeeddata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.FetchInterestResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.FetchInterestResponse} returns this
*/
proto.iotics.api.FetchInterestResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestResponse} returns this
 */
proto.iotics.api.FetchInterestResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.FetchInterestResponse.Payload}
 */
proto.iotics.api.FetchInterestResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.FetchInterestResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FetchInterestResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.FetchInterestResponse.Payload|undefined} value
 * @return {!proto.iotics.api.FetchInterestResponse} returns this
*/
proto.iotics.api.FetchInterestResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchInterestResponse} returns this
 */
proto.iotics.api.FetchInterestResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchInterestResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FetchLastStoredRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FetchLastStoredRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FetchLastStoredRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchLastStoredRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.FetchLastStoredRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FetchLastStoredRequest}
 */
proto.iotics.api.FetchLastStoredRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FetchLastStoredRequest;
  return proto.iotics.api.FetchLastStoredRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FetchLastStoredRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FetchLastStoredRequest}
 */
proto.iotics.api.FetchLastStoredRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.FetchLastStoredRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.FetchLastStoredRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FetchLastStoredRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FetchLastStoredRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FetchLastStoredRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchLastStoredRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.FetchLastStoredRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FetchLastStoredRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FetchLastStoredRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    interest: (f = msg.getInterest()) && proto.iotics.api.Interest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FetchLastStoredRequest.Arguments}
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FetchLastStoredRequest.Arguments;
  return proto.iotics.api.FetchLastStoredRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FetchLastStoredRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FetchLastStoredRequest.Arguments}
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.Interest;
      reader.readMessage(value,proto.iotics.api.Interest.deserializeBinaryFromReader);
      msg.setInterest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FetchLastStoredRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FetchLastStoredRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.Interest.serializeBinaryToWriter
    );
  }
};


/**
 * optional Interest interest = 1;
 * @return {?proto.iotics.api.Interest}
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.prototype.getInterest = function() {
  return /** @type{?proto.iotics.api.Interest} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.Interest, 1));
};


/**
 * @param {?proto.iotics.api.Interest|undefined} value
 * @return {!proto.iotics.api.FetchLastStoredRequest.Arguments} returns this
*/
proto.iotics.api.FetchLastStoredRequest.Arguments.prototype.setInterest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchLastStoredRequest.Arguments} returns this
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.prototype.clearInterest = function() {
  return this.setInterest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchLastStoredRequest.Arguments.prototype.hasInterest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.FetchLastStoredRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.FetchLastStoredRequest} returns this
*/
proto.iotics.api.FetchLastStoredRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchLastStoredRequest} returns this
 */
proto.iotics.api.FetchLastStoredRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchLastStoredRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.FetchLastStoredRequest.Arguments}
 */
proto.iotics.api.FetchLastStoredRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.FetchLastStoredRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.FetchLastStoredRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.FetchLastStoredRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.FetchLastStoredRequest} returns this
*/
proto.iotics.api.FetchLastStoredRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FetchLastStoredRequest} returns this
 */
proto.iotics.api.FetchLastStoredRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FetchLastStoredRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.iotics.api);

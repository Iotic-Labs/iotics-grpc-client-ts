// source: iotics/api/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.iotics.api.FeedData', null, global);
goog.exportSymbol('proto.iotics.api.GeoCircle', null, global);
goog.exportSymbol('proto.iotics.api.GeoLocation', null, global);
goog.exportSymbol('proto.iotics.api.Headers', null, global);
goog.exportSymbol('proto.iotics.api.LangLiteral', null, global);
goog.exportSymbol('proto.iotics.api.Limit', null, global);
goog.exportSymbol('proto.iotics.api.Literal', null, global);
goog.exportSymbol('proto.iotics.api.Offset', null, global);
goog.exportSymbol('proto.iotics.api.Property', null, global);
goog.exportSymbol('proto.iotics.api.Property.ValueCase', null, global);
goog.exportSymbol('proto.iotics.api.PropertyUpdate', null, global);
goog.exportSymbol('proto.iotics.api.Range', null, global);
goog.exportSymbol('proto.iotics.api.Scope', null, global);
goog.exportSymbol('proto.iotics.api.StringLiteral', null, global);
goog.exportSymbol('proto.iotics.api.SubscriptionHeaders', null, global);
goog.exportSymbol('proto.iotics.api.TwinID', null, global);
goog.exportSymbol('proto.iotics.api.Uri', null, global);
goog.exportSymbol('proto.iotics.api.Value', null, global);
goog.exportSymbol('proto.iotics.api.Values', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Limit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.Limit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Limit.displayName = 'proto.iotics.api.Limit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Offset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.Offset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Offset.displayName = 'proto.iotics.api.Offset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Range.displayName = 'proto.iotics.api.Range';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.LangLiteral = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.LangLiteral, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.LangLiteral.displayName = 'proto.iotics.api.LangLiteral';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.StringLiteral = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.StringLiteral, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.StringLiteral.displayName = 'proto.iotics.api.StringLiteral';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Literal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.Literal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Literal.displayName = 'proto.iotics.api.Literal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Uri = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.Uri, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Uri.displayName = 'proto.iotics.api.Uri';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Property = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotics.api.Property.oneofGroups_);
};
goog.inherits(proto.iotics.api.Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Property.displayName = 'proto.iotics.api.Property';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.GeoLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.GeoLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.GeoLocation.displayName = 'proto.iotics.api.GeoLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.GeoCircle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.GeoCircle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.GeoCircle.displayName = 'proto.iotics.api.GeoCircle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Headers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.Headers.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.Headers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Headers.displayName = 'proto.iotics.api.Headers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.SubscriptionHeaders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.SubscriptionHeaders.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.SubscriptionHeaders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.SubscriptionHeaders.displayName = 'proto.iotics.api.SubscriptionHeaders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.TwinID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.TwinID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.TwinID.displayName = 'proto.iotics.api.TwinID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Value.displayName = 'proto.iotics.api.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.Values = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.Values.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.Values, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.Values.displayName = 'proto.iotics.api.Values';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FeedData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FeedData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FeedData.displayName = 'proto.iotics.api.FeedData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.PropertyUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.PropertyUpdate.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.PropertyUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.PropertyUpdate.displayName = 'proto.iotics.api.PropertyUpdate';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Limit.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Limit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Limit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Limit.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Limit}
 */
proto.iotics.api.Limit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Limit;
  return proto.iotics.api.Limit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Limit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Limit}
 */
proto.iotics.api.Limit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Limit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Limit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Limit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Limit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 value = 1;
 * @return {number}
 */
proto.iotics.api.Limit.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotics.api.Limit} returns this
 */
proto.iotics.api.Limit.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Offset.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Offset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Offset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Offset.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Offset}
 */
proto.iotics.api.Offset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Offset;
  return proto.iotics.api.Offset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Offset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Offset}
 */
proto.iotics.api.Offset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Offset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Offset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Offset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Offset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 value = 1;
 * @return {number}
 */
proto.iotics.api.Offset.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iotics.api.Offset} returns this
 */
proto.iotics.api.Offset.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: (f = msg.getLimit()) && proto.iotics.api.Limit.toObject(includeInstance, f),
    offset: (f = msg.getOffset()) && proto.iotics.api.Offset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Range}
 */
proto.iotics.api.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Range;
  return proto.iotics.api.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Range}
 */
proto.iotics.api.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.Limit;
      reader.readMessage(value,proto.iotics.api.Limit.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 2:
      var value = new proto.iotics.api.Offset;
      reader.readMessage(value,proto.iotics.api.Offset.deserializeBinaryFromReader);
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.Limit.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.Offset.serializeBinaryToWriter
    );
  }
};


/**
 * optional Limit limit = 1;
 * @return {?proto.iotics.api.Limit}
 */
proto.iotics.api.Range.prototype.getLimit = function() {
  return /** @type{?proto.iotics.api.Limit} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.Limit, 1));
};


/**
 * @param {?proto.iotics.api.Limit|undefined} value
 * @return {!proto.iotics.api.Range} returns this
*/
proto.iotics.api.Range.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Range} returns this
 */
proto.iotics.api.Range.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Range.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Offset offset = 2;
 * @return {?proto.iotics.api.Offset}
 */
proto.iotics.api.Range.prototype.getOffset = function() {
  return /** @type{?proto.iotics.api.Offset} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.Offset, 2));
};


/**
 * @param {?proto.iotics.api.Offset|undefined} value
 * @return {!proto.iotics.api.Range} returns this
*/
proto.iotics.api.Range.prototype.setOffset = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Range} returns this
 */
proto.iotics.api.Range.prototype.clearOffset = function() {
  return this.setOffset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Range.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.LangLiteral.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.LangLiteral.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.LangLiteral} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.LangLiteral.toObject = function(includeInstance, msg) {
  var f, obj = {
    lang: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.LangLiteral}
 */
proto.iotics.api.LangLiteral.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.LangLiteral;
  return proto.iotics.api.LangLiteral.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.LangLiteral} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.LangLiteral}
 */
proto.iotics.api.LangLiteral.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.LangLiteral.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.LangLiteral.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.LangLiteral} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.LangLiteral.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLang();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string lang = 1;
 * @return {string}
 */
proto.iotics.api.LangLiteral.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.LangLiteral} returns this
 */
proto.iotics.api.LangLiteral.prototype.setLang = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.iotics.api.LangLiteral.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.LangLiteral} returns this
 */
proto.iotics.api.LangLiteral.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.StringLiteral.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.StringLiteral.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.StringLiteral} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.StringLiteral.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.StringLiteral}
 */
proto.iotics.api.StringLiteral.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.StringLiteral;
  return proto.iotics.api.StringLiteral.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.StringLiteral} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.StringLiteral}
 */
proto.iotics.api.StringLiteral.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.StringLiteral.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.StringLiteral.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.StringLiteral} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.StringLiteral.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.iotics.api.StringLiteral.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.StringLiteral} returns this
 */
proto.iotics.api.StringLiteral.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Literal.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Literal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Literal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Literal.toObject = function(includeInstance, msg) {
  var f, obj = {
    datatype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Literal}
 */
proto.iotics.api.Literal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Literal;
  return proto.iotics.api.Literal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Literal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Literal}
 */
proto.iotics.api.Literal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatatype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Literal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Literal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Literal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Literal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatatype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string dataType = 1;
 * @return {string}
 */
proto.iotics.api.Literal.prototype.getDatatype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Literal} returns this
 */
proto.iotics.api.Literal.prototype.setDatatype = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.iotics.api.Literal.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Literal} returns this
 */
proto.iotics.api.Literal.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Uri.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Uri.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Uri} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Uri.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Uri}
 */
proto.iotics.api.Uri.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Uri;
  return proto.iotics.api.Uri.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Uri} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Uri}
 */
proto.iotics.api.Uri.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Uri.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Uri.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Uri} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Uri.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.iotics.api.Uri.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Uri} returns this
 */
proto.iotics.api.Uri.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.iotics.api.Property.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.iotics.api.Property.ValueCase = {
  VALUE_NOT_SET: 0,
  LITERALVALUE: 2,
  LANGLITERALVALUE: 3,
  STRINGLITERALVALUE: 4,
  URIVALUE: 5
};

/**
 * @return {proto.iotics.api.Property.ValueCase}
 */
proto.iotics.api.Property.prototype.getValueCase = function() {
  return /** @type {proto.iotics.api.Property.ValueCase} */(jspb.Message.computeOneofCase(this, proto.iotics.api.Property.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Property.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Property.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Property} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Property.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    literalvalue: (f = msg.getLiteralvalue()) && proto.iotics.api.Literal.toObject(includeInstance, f),
    langliteralvalue: (f = msg.getLangliteralvalue()) && proto.iotics.api.LangLiteral.toObject(includeInstance, f),
    stringliteralvalue: (f = msg.getStringliteralvalue()) && proto.iotics.api.StringLiteral.toObject(includeInstance, f),
    urivalue: (f = msg.getUrivalue()) && proto.iotics.api.Uri.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.Property.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Property;
  return proto.iotics.api.Property.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.Property.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.iotics.api.Literal;
      reader.readMessage(value,proto.iotics.api.Literal.deserializeBinaryFromReader);
      msg.setLiteralvalue(value);
      break;
    case 3:
      var value = new proto.iotics.api.LangLiteral;
      reader.readMessage(value,proto.iotics.api.LangLiteral.deserializeBinaryFromReader);
      msg.setLangliteralvalue(value);
      break;
    case 4:
      var value = new proto.iotics.api.StringLiteral;
      reader.readMessage(value,proto.iotics.api.StringLiteral.deserializeBinaryFromReader);
      msg.setStringliteralvalue(value);
      break;
    case 5:
      var value = new proto.iotics.api.Uri;
      reader.readMessage(value,proto.iotics.api.Uri.deserializeBinaryFromReader);
      msg.setUrivalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Property.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Property.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLiteralvalue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.Literal.serializeBinaryToWriter
    );
  }
  f = message.getLangliteralvalue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.LangLiteral.serializeBinaryToWriter
    );
  }
  f = message.getStringliteralvalue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.iotics.api.StringLiteral.serializeBinaryToWriter
    );
  }
  f = message.getUrivalue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.iotics.api.Uri.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.iotics.api.Property.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Property} returns this
 */
proto.iotics.api.Property.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Literal literalValue = 2;
 * @return {?proto.iotics.api.Literal}
 */
proto.iotics.api.Property.prototype.getLiteralvalue = function() {
  return /** @type{?proto.iotics.api.Literal} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.Literal, 2));
};


/**
 * @param {?proto.iotics.api.Literal|undefined} value
 * @return {!proto.iotics.api.Property} returns this
*/
proto.iotics.api.Property.prototype.setLiteralvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.iotics.api.Property.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Property} returns this
 */
proto.iotics.api.Property.prototype.clearLiteralvalue = function() {
  return this.setLiteralvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Property.prototype.hasLiteralvalue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LangLiteral langLiteralValue = 3;
 * @return {?proto.iotics.api.LangLiteral}
 */
proto.iotics.api.Property.prototype.getLangliteralvalue = function() {
  return /** @type{?proto.iotics.api.LangLiteral} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.LangLiteral, 3));
};


/**
 * @param {?proto.iotics.api.LangLiteral|undefined} value
 * @return {!proto.iotics.api.Property} returns this
*/
proto.iotics.api.Property.prototype.setLangliteralvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.iotics.api.Property.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Property} returns this
 */
proto.iotics.api.Property.prototype.clearLangliteralvalue = function() {
  return this.setLangliteralvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Property.prototype.hasLangliteralvalue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StringLiteral stringLiteralValue = 4;
 * @return {?proto.iotics.api.StringLiteral}
 */
proto.iotics.api.Property.prototype.getStringliteralvalue = function() {
  return /** @type{?proto.iotics.api.StringLiteral} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.StringLiteral, 4));
};


/**
 * @param {?proto.iotics.api.StringLiteral|undefined} value
 * @return {!proto.iotics.api.Property} returns this
*/
proto.iotics.api.Property.prototype.setStringliteralvalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.iotics.api.Property.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Property} returns this
 */
proto.iotics.api.Property.prototype.clearStringliteralvalue = function() {
  return this.setStringliteralvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Property.prototype.hasStringliteralvalue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Uri uriValue = 5;
 * @return {?proto.iotics.api.Uri}
 */
proto.iotics.api.Property.prototype.getUrivalue = function() {
  return /** @type{?proto.iotics.api.Uri} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.Uri, 5));
};


/**
 * @param {?proto.iotics.api.Uri|undefined} value
 * @return {!proto.iotics.api.Property} returns this
*/
proto.iotics.api.Property.prototype.setUrivalue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.iotics.api.Property.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Property} returns this
 */
proto.iotics.api.Property.prototype.clearUrivalue = function() {
  return this.setUrivalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Property.prototype.hasUrivalue = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.GeoLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.GeoLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.GeoLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.GeoLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.GeoLocation}
 */
proto.iotics.api.GeoLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.GeoLocation;
  return proto.iotics.api.GeoLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.GeoLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.GeoLocation}
 */
proto.iotics.api.GeoLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.GeoLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.GeoLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.GeoLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.GeoLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double lat = 1;
 * @return {number}
 */
proto.iotics.api.GeoLocation.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.iotics.api.GeoLocation} returns this
 */
proto.iotics.api.GeoLocation.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double lon = 2;
 * @return {number}
 */
proto.iotics.api.GeoLocation.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.iotics.api.GeoLocation} returns this
 */
proto.iotics.api.GeoLocation.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.GeoCircle.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.GeoCircle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.GeoCircle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.GeoCircle.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && proto.iotics.api.GeoLocation.toObject(includeInstance, f),
    radiuskm: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.GeoCircle}
 */
proto.iotics.api.GeoCircle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.GeoCircle;
  return proto.iotics.api.GeoCircle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.GeoCircle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.GeoCircle}
 */
proto.iotics.api.GeoCircle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.GeoLocation;
      reader.readMessage(value,proto.iotics.api.GeoLocation.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadiuskm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.GeoCircle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.GeoCircle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.GeoCircle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.GeoCircle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.iotics.api.GeoLocation.serializeBinaryToWriter
    );
  }
  f = message.getRadiuskm();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional GeoLocation location = 1;
 * @return {?proto.iotics.api.GeoLocation}
 */
proto.iotics.api.GeoCircle.prototype.getLocation = function() {
  return /** @type{?proto.iotics.api.GeoLocation} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.GeoLocation, 1));
};


/**
 * @param {?proto.iotics.api.GeoLocation|undefined} value
 * @return {!proto.iotics.api.GeoCircle} returns this
*/
proto.iotics.api.GeoCircle.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.GeoCircle} returns this
 */
proto.iotics.api.GeoCircle.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.GeoCircle.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double radiusKm = 2;
 * @return {number}
 */
proto.iotics.api.GeoCircle.prototype.getRadiuskm = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.iotics.api.GeoCircle} returns this
 */
proto.iotics.api.GeoCircle.prototype.setRadiuskm = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.Headers.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Headers.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Headers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Headers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Headers.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientref: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientappid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transactionrefList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    consumergroup: (f = msg.getConsumergroup()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    requesttimeout: (f = msg.getRequesttimeout()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Headers}
 */
proto.iotics.api.Headers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Headers;
  return proto.iotics.api.Headers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Headers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Headers}
 */
proto.iotics.api.Headers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientref(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientappid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransactionref(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setConsumergroup(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRequesttimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Headers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Headers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Headers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Headers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientref();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientappid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTransactionrefList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getConsumergroup();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getRequesttimeout();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string clientRef = 1;
 * @return {string}
 */
proto.iotics.api.Headers.prototype.getClientref = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Headers} returns this
 */
proto.iotics.api.Headers.prototype.setClientref = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string clientAppId = 2;
 * @return {string}
 */
proto.iotics.api.Headers.prototype.getClientappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Headers} returns this
 */
proto.iotics.api.Headers.prototype.setClientappid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string transactionRef = 3;
 * @return {!Array<string>}
 */
proto.iotics.api.Headers.prototype.getTransactionrefList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.iotics.api.Headers} returns this
 */
proto.iotics.api.Headers.prototype.setTransactionrefList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Headers} returns this
 */
proto.iotics.api.Headers.prototype.addTransactionref = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.Headers} returns this
 */
proto.iotics.api.Headers.prototype.clearTransactionrefList = function() {
  return this.setTransactionrefList([]);
};


/**
 * optional google.protobuf.StringValue consumerGroup = 4;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.iotics.api.Headers.prototype.getConsumergroup = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 4));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.iotics.api.Headers} returns this
*/
proto.iotics.api.Headers.prototype.setConsumergroup = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Headers} returns this
 */
proto.iotics.api.Headers.prototype.clearConsumergroup = function() {
  return this.setConsumergroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Headers.prototype.hasConsumergroup = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp requestTimeout = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotics.api.Headers.prototype.getRequesttimeout = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotics.api.Headers} returns this
*/
proto.iotics.api.Headers.prototype.setRequesttimeout = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.Headers} returns this
 */
proto.iotics.api.Headers.prototype.clearRequesttimeout = function() {
  return this.setRequesttimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.Headers.prototype.hasRequesttimeout = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.SubscriptionHeaders.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.SubscriptionHeaders.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.SubscriptionHeaders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.SubscriptionHeaders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SubscriptionHeaders.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientappid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transactionrefList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    consumergroup: (f = msg.getConsumergroup()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.SubscriptionHeaders}
 */
proto.iotics.api.SubscriptionHeaders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.SubscriptionHeaders;
  return proto.iotics.api.SubscriptionHeaders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.SubscriptionHeaders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.SubscriptionHeaders}
 */
proto.iotics.api.SubscriptionHeaders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientappid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransactionref(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setConsumergroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.SubscriptionHeaders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.SubscriptionHeaders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.SubscriptionHeaders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.SubscriptionHeaders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientappid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransactionrefList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getConsumergroup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string clientAppId = 1;
 * @return {string}
 */
proto.iotics.api.SubscriptionHeaders.prototype.getClientappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.SubscriptionHeaders} returns this
 */
proto.iotics.api.SubscriptionHeaders.prototype.setClientappid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string transactionRef = 2;
 * @return {!Array<string>}
 */
proto.iotics.api.SubscriptionHeaders.prototype.getTransactionrefList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.iotics.api.SubscriptionHeaders} returns this
 */
proto.iotics.api.SubscriptionHeaders.prototype.setTransactionrefList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.SubscriptionHeaders} returns this
 */
proto.iotics.api.SubscriptionHeaders.prototype.addTransactionref = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.SubscriptionHeaders} returns this
 */
proto.iotics.api.SubscriptionHeaders.prototype.clearTransactionrefList = function() {
  return this.setTransactionrefList([]);
};


/**
 * optional google.protobuf.StringValue consumerGroup = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.iotics.api.SubscriptionHeaders.prototype.getConsumergroup = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.iotics.api.SubscriptionHeaders} returns this
*/
proto.iotics.api.SubscriptionHeaders.prototype.setConsumergroup = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.SubscriptionHeaders} returns this
 */
proto.iotics.api.SubscriptionHeaders.prototype.clearConsumergroup = function() {
  return this.setConsumergroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.SubscriptionHeaders.prototype.hasConsumergroup = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.TwinID.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.TwinID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.TwinID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.TwinID.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hostid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.TwinID}
 */
proto.iotics.api.TwinID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.TwinID;
  return proto.iotics.api.TwinID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.TwinID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.TwinID}
 */
proto.iotics.api.TwinID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.TwinID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.TwinID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.TwinID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.TwinID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHostid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.iotics.api.TwinID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.TwinID} returns this
 */
proto.iotics.api.TwinID.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hostId = 2;
 * @return {string}
 */
proto.iotics.api.TwinID.prototype.getHostid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.TwinID} returns this
 */
proto.iotics.api.TwinID.prototype.setHostid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 2, ""),
    unit: jspb.Message.getFieldWithDefault(msg, 3, ""),
    datatype: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Value}
 */
proto.iotics.api.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Value;
  return proto.iotics.api.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Value}
 */
proto.iotics.api.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatatype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUnit();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDatatype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.iotics.api.Value.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Value} returns this
 */
proto.iotics.api.Value.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string comment = 2;
 * @return {string}
 */
proto.iotics.api.Value.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Value} returns this
 */
proto.iotics.api.Value.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string unit = 3;
 * @return {string}
 */
proto.iotics.api.Value.prototype.getUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Value} returns this
 */
proto.iotics.api.Value.prototype.setUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dataType = 4;
 * @return {string}
 */
proto.iotics.api.Value.prototype.getDatatype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.Value} returns this
 */
proto.iotics.api.Value.prototype.setDatatype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.Values.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.Values.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.Values.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.Values} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Values.toObject = function(includeInstance, msg) {
  var f, obj = {
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    proto.iotics.api.Value.toObject, includeInstance),
    deletedbylabelList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.Values}
 */
proto.iotics.api.Values.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.Values;
  return proto.iotics.api.Values.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.Values} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.Values}
 */
proto.iotics.api.Values.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.Value;
      reader.readMessage(value,proto.iotics.api.Value.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDeletedbylabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.Values.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.Values.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.Values} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.Values.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.iotics.api.Value.serializeBinaryToWriter
    );
  }
  f = message.getDeletedbylabelList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated Value added = 1;
 * @return {!Array<!proto.iotics.api.Value>}
 */
proto.iotics.api.Values.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.iotics.api.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotics.api.Value, 1));
};


/**
 * @param {!Array<!proto.iotics.api.Value>} value
 * @return {!proto.iotics.api.Values} returns this
*/
proto.iotics.api.Values.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotics.api.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Value}
 */
proto.iotics.api.Values.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotics.api.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.Values} returns this
 */
proto.iotics.api.Values.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};


/**
 * repeated string deletedByLabel = 2;
 * @return {!Array<string>}
 */
proto.iotics.api.Values.prototype.getDeletedbylabelList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.iotics.api.Values} returns this
 */
proto.iotics.api.Values.prototype.setDeletedbylabelList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Values} returns this
 */
proto.iotics.api.Values.prototype.addDeletedbylabel = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.Values} returns this
 */
proto.iotics.api.Values.prototype.clearDeletedbylabelList = function() {
  return this.setDeletedbylabelList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FeedData.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FeedData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FeedData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FeedData.toObject = function(includeInstance, msg) {
  var f, obj = {
    occurredat: (f = msg.getOccurredat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    mime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FeedData}
 */
proto.iotics.api.FeedData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FeedData;
  return proto.iotics.api.FeedData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FeedData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FeedData}
 */
proto.iotics.api.FeedData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOccurredat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FeedData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FeedData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FeedData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FeedData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOccurredat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp occurredAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotics.api.FeedData.prototype.getOccurredat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotics.api.FeedData} returns this
*/
proto.iotics.api.FeedData.prototype.setOccurredat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FeedData} returns this
 */
proto.iotics.api.FeedData.prototype.clearOccurredat = function() {
  return this.setOccurredat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FeedData.prototype.hasOccurredat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string mime = 3;
 * @return {string}
 */
proto.iotics.api.FeedData.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.FeedData} returns this
 */
proto.iotics.api.FeedData.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.iotics.api.FeedData.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes data = 4;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.iotics.api.FeedData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.iotics.api.FeedData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.iotics.api.FeedData} returns this
 */
proto.iotics.api.FeedData.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.PropertyUpdate.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.PropertyUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.PropertyUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.PropertyUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.PropertyUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    clearedall: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    deletedList: jspb.Message.toObjectList(msg.getDeletedList(),
    proto.iotics.api.Property.toObject, includeInstance),
    deletedbykeyList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    proto.iotics.api.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.PropertyUpdate}
 */
proto.iotics.api.PropertyUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.PropertyUpdate;
  return proto.iotics.api.PropertyUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.PropertyUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.PropertyUpdate}
 */
proto.iotics.api.PropertyUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearedall(value);
      break;
    case 2:
      var value = new proto.iotics.api.Property;
      reader.readMessage(value,proto.iotics.api.Property.deserializeBinaryFromReader);
      msg.addDeleted(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDeletedbykey(value);
      break;
    case 4:
      var value = new proto.iotics.api.Property;
      reader.readMessage(value,proto.iotics.api.Property.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.PropertyUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.PropertyUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.PropertyUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.PropertyUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClearedall();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDeletedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.iotics.api.Property.serializeBinaryToWriter
    );
  }
  f = message.getDeletedbykeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.iotics.api.Property.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool clearedAll = 1;
 * @return {boolean}
 */
proto.iotics.api.PropertyUpdate.prototype.getClearedall = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.iotics.api.PropertyUpdate} returns this
 */
proto.iotics.api.PropertyUpdate.prototype.setClearedall = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated Property deleted = 2;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.PropertyUpdate.prototype.getDeletedList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotics.api.Property, 2));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.PropertyUpdate} returns this
*/
proto.iotics.api.PropertyUpdate.prototype.setDeletedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.PropertyUpdate.prototype.addDeleted = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.PropertyUpdate} returns this
 */
proto.iotics.api.PropertyUpdate.prototype.clearDeletedList = function() {
  return this.setDeletedList([]);
};


/**
 * repeated string deletedByKey = 3;
 * @return {!Array<string>}
 */
proto.iotics.api.PropertyUpdate.prototype.getDeletedbykeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.iotics.api.PropertyUpdate} returns this
 */
proto.iotics.api.PropertyUpdate.prototype.setDeletedbykeyList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.PropertyUpdate} returns this
 */
proto.iotics.api.PropertyUpdate.prototype.addDeletedbykey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.PropertyUpdate} returns this
 */
proto.iotics.api.PropertyUpdate.prototype.clearDeletedbykeyList = function() {
  return this.setDeletedbykeyList([]);
};


/**
 * repeated Property added = 4;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.PropertyUpdate.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotics.api.Property, 4));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.PropertyUpdate} returns this
*/
proto.iotics.api.PropertyUpdate.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.PropertyUpdate.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.PropertyUpdate} returns this
 */
proto.iotics.api.PropertyUpdate.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};


/**
 * @enum {number}
 */
proto.iotics.api.Scope = {
  GLOBAL: 0,
  LOCAL: 1
};

goog.object.extend(exports, proto.iotics.api);

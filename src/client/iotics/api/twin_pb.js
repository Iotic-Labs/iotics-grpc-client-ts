// source: iotics/api/twin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var iotics_api_common_pb = require('../../iotics/api/common_pb.js');
goog.object.extend(proto, iotics_api_common_pb);
var iotics_api_feed_pb = require('../../iotics/api/feed_pb.js');
goog.object.extend(proto, iotics_api_feed_pb);
var iotics_api_input_pb = require('../../iotics/api/input_pb.js');
goog.object.extend(proto, iotics_api_input_pb);
goog.exportSymbol('proto.iotics.api.CreateTwinRequest', null, global);
goog.exportSymbol('proto.iotics.api.CreateTwinRequest.Payload', null, global);
goog.exportSymbol('proto.iotics.api.CreateTwinResponse', null, global);
goog.exportSymbol('proto.iotics.api.CreateTwinResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.DeleteTwinRequest', null, global);
goog.exportSymbol('proto.iotics.api.DeleteTwinRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.DeleteTwinResponse', null, global);
goog.exportSymbol('proto.iotics.api.DeleteTwinResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.DescribeTwinRequest', null, global);
goog.exportSymbol('proto.iotics.api.DescribeTwinRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.DescribeTwinResponse', null, global);
goog.exportSymbol('proto.iotics.api.DescribeTwinResponse.MetaResult', null, global);
goog.exportSymbol('proto.iotics.api.DescribeTwinResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.FeedMeta', null, global);
goog.exportSymbol('proto.iotics.api.GeoLocationUpdate', null, global);
goog.exportSymbol('proto.iotics.api.InputMeta', null, global);
goog.exportSymbol('proto.iotics.api.ListAllTwinsRequest', null, global);
goog.exportSymbol('proto.iotics.api.ListAllTwinsResponse', null, global);
goog.exportSymbol('proto.iotics.api.ListAllTwinsResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.ListAllTwinsResponse.TwinDetails', null, global);
goog.exportSymbol('proto.iotics.api.UpdateTwinRequest', null, global);
goog.exportSymbol('proto.iotics.api.UpdateTwinRequest.Arguments', null, global);
goog.exportSymbol('proto.iotics.api.UpdateTwinRequest.Payload', null, global);
goog.exportSymbol('proto.iotics.api.UpdateTwinResponse', null, global);
goog.exportSymbol('proto.iotics.api.UpdateTwinResponse.Payload', null, global);
goog.exportSymbol('proto.iotics.api.UpsertTwinRequest', null, global);
goog.exportSymbol('proto.iotics.api.UpsertTwinRequest.Payload', null, global);
goog.exportSymbol('proto.iotics.api.UpsertTwinResponse', null, global);
goog.exportSymbol('proto.iotics.api.UpsertTwinResponse.Payload', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllTwinsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ListAllTwinsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllTwinsRequest.displayName = 'proto.iotics.api.ListAllTwinsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllTwinsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.ListAllTwinsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllTwinsResponse.displayName = 'proto.iotics.api.ListAllTwinsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.ListAllTwinsResponse.TwinDetails.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.ListAllTwinsResponse.TwinDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllTwinsResponse.TwinDetails.displayName = 'proto.iotics.api.ListAllTwinsResponse.TwinDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.ListAllTwinsResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.ListAllTwinsResponse.Payload.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.ListAllTwinsResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.ListAllTwinsResponse.Payload.displayName = 'proto.iotics.api.ListAllTwinsResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateTwinRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateTwinRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateTwinRequest.displayName = 'proto.iotics.api.CreateTwinRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateTwinRequest.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateTwinRequest.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateTwinRequest.Payload.displayName = 'proto.iotics.api.CreateTwinRequest.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateTwinResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateTwinResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateTwinResponse.displayName = 'proto.iotics.api.CreateTwinResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.CreateTwinResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.CreateTwinResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.CreateTwinResponse.Payload.displayName = 'proto.iotics.api.CreateTwinResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteTwinRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteTwinRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteTwinRequest.displayName = 'proto.iotics.api.DeleteTwinRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteTwinRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteTwinRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteTwinRequest.Arguments.displayName = 'proto.iotics.api.DeleteTwinRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteTwinResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteTwinResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteTwinResponse.displayName = 'proto.iotics.api.DeleteTwinResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DeleteTwinResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DeleteTwinResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DeleteTwinResponse.Payload.displayName = 'proto.iotics.api.DeleteTwinResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeTwinRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeTwinRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeTwinRequest.displayName = 'proto.iotics.api.DescribeTwinRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeTwinRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeTwinRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeTwinRequest.Arguments.displayName = 'proto.iotics.api.DescribeTwinRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.FeedMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.FeedMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.FeedMeta.displayName = 'proto.iotics.api.FeedMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.InputMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.InputMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.InputMeta.displayName = 'proto.iotics.api.InputMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeTwinResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeTwinResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeTwinResponse.displayName = 'proto.iotics.api.DescribeTwinResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeTwinResponse.MetaResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.DescribeTwinResponse.MetaResult.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.DescribeTwinResponse.MetaResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeTwinResponse.MetaResult.displayName = 'proto.iotics.api.DescribeTwinResponse.MetaResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.DescribeTwinResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.DescribeTwinResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.DescribeTwinResponse.Payload.displayName = 'proto.iotics.api.DescribeTwinResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.GeoLocationUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.GeoLocationUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.GeoLocationUpdate.displayName = 'proto.iotics.api.GeoLocationUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateTwinRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateTwinRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateTwinRequest.displayName = 'proto.iotics.api.UpdateTwinRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateTwinRequest.Arguments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateTwinRequest.Arguments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateTwinRequest.Arguments.displayName = 'proto.iotics.api.UpdateTwinRequest.Arguments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateTwinRequest.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateTwinRequest.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateTwinRequest.Payload.displayName = 'proto.iotics.api.UpdateTwinRequest.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateTwinResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateTwinResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateTwinResponse.displayName = 'proto.iotics.api.UpdateTwinResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpdateTwinResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpdateTwinResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpdateTwinResponse.Payload.displayName = 'proto.iotics.api.UpdateTwinResponse.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpsertTwinRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpsertTwinRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpsertTwinRequest.displayName = 'proto.iotics.api.UpsertTwinRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpsertTwinRequest.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotics.api.UpsertTwinRequest.Payload.repeatedFields_, null);
};
goog.inherits(proto.iotics.api.UpsertTwinRequest.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpsertTwinRequest.Payload.displayName = 'proto.iotics.api.UpsertTwinRequest.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpsertTwinResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpsertTwinResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpsertTwinResponse.displayName = 'proto.iotics.api.UpsertTwinResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iotics.api.UpsertTwinResponse.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.iotics.api.UpsertTwinResponse.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iotics.api.UpsertTwinResponse.Payload.displayName = 'proto.iotics.api.UpsertTwinResponse.Payload';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllTwinsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllTwinsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllTwinsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    range: (f = msg.getRange()) && iotics_api_common_pb.Range.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllTwinsRequest}
 */
proto.iotics.api.ListAllTwinsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllTwinsRequest;
  return proto.iotics.api.ListAllTwinsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllTwinsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllTwinsRequest}
 */
proto.iotics.api.ListAllTwinsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 20:
      var value = new iotics_api_common_pb.Range;
      reader.readMessage(value,iotics_api_common_pb.Range.deserializeBinaryFromReader);
      msg.setRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllTwinsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllTwinsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllTwinsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getRange();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      iotics_api_common_pb.Range.serializeBinaryToWriter
    );
  }
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ListAllTwinsRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsRequest} returns this
*/
proto.iotics.api.ListAllTwinsRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsRequest} returns this
 */
proto.iotics.api.ListAllTwinsRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Range range = 20;
 * @return {?proto.iotics.api.Range}
 */
proto.iotics.api.ListAllTwinsRequest.prototype.getRange = function() {
  return /** @type{?proto.iotics.api.Range} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Range, 20));
};


/**
 * @param {?proto.iotics.api.Range|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsRequest} returns this
*/
proto.iotics.api.ListAllTwinsRequest.prototype.setRange = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsRequest} returns this
 */
proto.iotics.api.ListAllTwinsRequest.prototype.clearRange = function() {
  return this.setRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsRequest.prototype.hasRange = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllTwinsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllTwinsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllTwinsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.ListAllTwinsResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllTwinsResponse}
 */
proto.iotics.api.ListAllTwinsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllTwinsResponse;
  return proto.iotics.api.ListAllTwinsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllTwinsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllTwinsResponse}
 */
proto.iotics.api.ListAllTwinsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.ListAllTwinsResponse.Payload;
      reader.readMessage(value,proto.iotics.api.ListAllTwinsResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllTwinsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllTwinsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllTwinsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.ListAllTwinsResponse.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllTwinsResponse.TwinDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f),
    location: (f = msg.getLocation()) && iotics_api_common_pb.GeoLocation.toObject(includeInstance, f),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    iotics_api_common_pb.Property.toObject, includeInstance),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllTwinsResponse.TwinDetails;
  return proto.iotics.api.ListAllTwinsResponse.TwinDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    case 3:
      var value = new iotics_api_common_pb.GeoLocation;
      reader.readMessage(value,iotics_api_common_pb.GeoLocation.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 5:
      var value = new iotics_api_common_pb.Property;
      reader.readMessage(value,iotics_api_common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllTwinsResponse.TwinDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      iotics_api_common_pb.GeoLocation.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      iotics_api_common_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
*/
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GeoLocation location = 3;
 * @return {?proto.iotics.api.GeoLocation}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.getLocation = function() {
  return /** @type{?proto.iotics.api.GeoLocation} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.GeoLocation, 3));
};


/**
 * @param {?proto.iotics.api.GeoLocation|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
*/
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Property properties = 5;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Property, 5));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
*/
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * optional google.protobuf.Timestamp createdAt = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
*/
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
*/
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails} returns this
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsResponse.TwinDetails.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.ListAllTwinsResponse.Payload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.ListAllTwinsResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.ListAllTwinsResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.ListAllTwinsResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinsList: jspb.Message.toObjectList(msg.getTwinsList(),
    proto.iotics.api.ListAllTwinsResponse.TwinDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.ListAllTwinsResponse.Payload}
 */
proto.iotics.api.ListAllTwinsResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.ListAllTwinsResponse.Payload;
  return proto.iotics.api.ListAllTwinsResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.ListAllTwinsResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.ListAllTwinsResponse.Payload}
 */
proto.iotics.api.ListAllTwinsResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.iotics.api.ListAllTwinsResponse.TwinDetails;
      reader.readMessage(value,proto.iotics.api.ListAllTwinsResponse.TwinDetails.deserializeBinaryFromReader);
      msg.addTwins(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.ListAllTwinsResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.ListAllTwinsResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.ListAllTwinsResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.ListAllTwinsResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.iotics.api.ListAllTwinsResponse.TwinDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TwinDetails twins = 1;
 * @return {!Array<!proto.iotics.api.ListAllTwinsResponse.TwinDetails>}
 */
proto.iotics.api.ListAllTwinsResponse.Payload.prototype.getTwinsList = function() {
  return /** @type{!Array<!proto.iotics.api.ListAllTwinsResponse.TwinDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotics.api.ListAllTwinsResponse.TwinDetails, 1));
};


/**
 * @param {!Array<!proto.iotics.api.ListAllTwinsResponse.TwinDetails>} value
 * @return {!proto.iotics.api.ListAllTwinsResponse.Payload} returns this
*/
proto.iotics.api.ListAllTwinsResponse.Payload.prototype.setTwinsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.iotics.api.ListAllTwinsResponse.TwinDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.ListAllTwinsResponse.TwinDetails}
 */
proto.iotics.api.ListAllTwinsResponse.Payload.prototype.addTwins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotics.api.ListAllTwinsResponse.TwinDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.ListAllTwinsResponse.Payload} returns this
 */
proto.iotics.api.ListAllTwinsResponse.Payload.prototype.clearTwinsList = function() {
  return this.setTwinsList([]);
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.ListAllTwinsResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsResponse} returns this
*/
proto.iotics.api.ListAllTwinsResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsResponse} returns this
 */
proto.iotics.api.ListAllTwinsResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.ListAllTwinsResponse.Payload}
 */
proto.iotics.api.ListAllTwinsResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.ListAllTwinsResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.ListAllTwinsResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.ListAllTwinsResponse.Payload|undefined} value
 * @return {!proto.iotics.api.ListAllTwinsResponse} returns this
*/
proto.iotics.api.ListAllTwinsResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.ListAllTwinsResponse} returns this
 */
proto.iotics.api.ListAllTwinsResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.ListAllTwinsResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateTwinRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateTwinRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateTwinRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.CreateTwinRequest.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateTwinRequest}
 */
proto.iotics.api.CreateTwinRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateTwinRequest;
  return proto.iotics.api.CreateTwinRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateTwinRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateTwinRequest}
 */
proto.iotics.api.CreateTwinRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.CreateTwinRequest.Payload;
      reader.readMessage(value,proto.iotics.api.CreateTwinRequest.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateTwinRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateTwinRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateTwinRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.CreateTwinRequest.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateTwinRequest.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateTwinRequest.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateTwinRequest.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinRequest.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateTwinRequest.Payload}
 */
proto.iotics.api.CreateTwinRequest.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateTwinRequest.Payload;
  return proto.iotics.api.CreateTwinRequest.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateTwinRequest.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateTwinRequest.Payload}
 */
proto.iotics.api.CreateTwinRequest.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateTwinRequest.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateTwinRequest.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateTwinRequest.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinRequest.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.iotics.api.CreateTwinRequest.Payload.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.iotics.api.CreateTwinRequest.Payload} returns this
 */
proto.iotics.api.CreateTwinRequest.Payload.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.CreateTwinRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.CreateTwinRequest} returns this
*/
proto.iotics.api.CreateTwinRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateTwinRequest} returns this
 */
proto.iotics.api.CreateTwinRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateTwinRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.CreateTwinRequest.Payload}
 */
proto.iotics.api.CreateTwinRequest.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.CreateTwinRequest.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.CreateTwinRequest.Payload, 2));
};


/**
 * @param {?proto.iotics.api.CreateTwinRequest.Payload|undefined} value
 * @return {!proto.iotics.api.CreateTwinRequest} returns this
*/
proto.iotics.api.CreateTwinRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateTwinRequest} returns this
 */
proto.iotics.api.CreateTwinRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateTwinRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateTwinResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateTwinResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateTwinResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.CreateTwinResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateTwinResponse}
 */
proto.iotics.api.CreateTwinResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateTwinResponse;
  return proto.iotics.api.CreateTwinResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateTwinResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateTwinResponse}
 */
proto.iotics.api.CreateTwinResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.CreateTwinResponse.Payload;
      reader.readMessage(value,proto.iotics.api.CreateTwinResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateTwinResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateTwinResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateTwinResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.CreateTwinResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.CreateTwinResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.CreateTwinResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.CreateTwinResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.CreateTwinResponse.Payload}
 */
proto.iotics.api.CreateTwinResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.CreateTwinResponse.Payload;
  return proto.iotics.api.CreateTwinResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.CreateTwinResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.CreateTwinResponse.Payload}
 */
proto.iotics.api.CreateTwinResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.CreateTwinResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.CreateTwinResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.CreateTwinResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.CreateTwinResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.CreateTwinResponse.Payload.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.CreateTwinResponse.Payload} returns this
*/
proto.iotics.api.CreateTwinResponse.Payload.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateTwinResponse.Payload} returns this
 */
proto.iotics.api.CreateTwinResponse.Payload.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateTwinResponse.Payload.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.CreateTwinResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.CreateTwinResponse} returns this
*/
proto.iotics.api.CreateTwinResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateTwinResponse} returns this
 */
proto.iotics.api.CreateTwinResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateTwinResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.CreateTwinResponse.Payload}
 */
proto.iotics.api.CreateTwinResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.CreateTwinResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.CreateTwinResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.CreateTwinResponse.Payload|undefined} value
 * @return {!proto.iotics.api.CreateTwinResponse} returns this
*/
proto.iotics.api.CreateTwinResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.CreateTwinResponse} returns this
 */
proto.iotics.api.CreateTwinResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.CreateTwinResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteTwinRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteTwinRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteTwinRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.DeleteTwinRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteTwinRequest}
 */
proto.iotics.api.DeleteTwinRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteTwinRequest;
  return proto.iotics.api.DeleteTwinRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteTwinRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteTwinRequest}
 */
proto.iotics.api.DeleteTwinRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DeleteTwinRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.DeleteTwinRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteTwinRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteTwinRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteTwinRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DeleteTwinRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteTwinRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteTwinRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteTwinRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteTwinRequest.Arguments}
 */
proto.iotics.api.DeleteTwinRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteTwinRequest.Arguments;
  return proto.iotics.api.DeleteTwinRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteTwinRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteTwinRequest.Arguments}
 */
proto.iotics.api.DeleteTwinRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteTwinRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteTwinRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteTwinRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.DeleteTwinRequest.Arguments.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.DeleteTwinRequest.Arguments} returns this
*/
proto.iotics.api.DeleteTwinRequest.Arguments.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteTwinRequest.Arguments} returns this
 */
proto.iotics.api.DeleteTwinRequest.Arguments.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteTwinRequest.Arguments.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DeleteTwinRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DeleteTwinRequest} returns this
*/
proto.iotics.api.DeleteTwinRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteTwinRequest} returns this
 */
proto.iotics.api.DeleteTwinRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteTwinRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.DeleteTwinRequest.Arguments}
 */
proto.iotics.api.DeleteTwinRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.DeleteTwinRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DeleteTwinRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.DeleteTwinRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.DeleteTwinRequest} returns this
*/
proto.iotics.api.DeleteTwinRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteTwinRequest} returns this
 */
proto.iotics.api.DeleteTwinRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteTwinRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteTwinResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteTwinResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteTwinResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.DeleteTwinResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteTwinResponse}
 */
proto.iotics.api.DeleteTwinResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteTwinResponse;
  return proto.iotics.api.DeleteTwinResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteTwinResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteTwinResponse}
 */
proto.iotics.api.DeleteTwinResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DeleteTwinResponse.Payload;
      reader.readMessage(value,proto.iotics.api.DeleteTwinResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteTwinResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteTwinResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteTwinResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DeleteTwinResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DeleteTwinResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DeleteTwinResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DeleteTwinResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DeleteTwinResponse.Payload}
 */
proto.iotics.api.DeleteTwinResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DeleteTwinResponse.Payload;
  return proto.iotics.api.DeleteTwinResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DeleteTwinResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DeleteTwinResponse.Payload}
 */
proto.iotics.api.DeleteTwinResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DeleteTwinResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DeleteTwinResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DeleteTwinResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DeleteTwinResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.DeleteTwinResponse.Payload.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.DeleteTwinResponse.Payload} returns this
*/
proto.iotics.api.DeleteTwinResponse.Payload.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteTwinResponse.Payload} returns this
 */
proto.iotics.api.DeleteTwinResponse.Payload.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteTwinResponse.Payload.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DeleteTwinResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DeleteTwinResponse} returns this
*/
proto.iotics.api.DeleteTwinResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteTwinResponse} returns this
 */
proto.iotics.api.DeleteTwinResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteTwinResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.DeleteTwinResponse.Payload}
 */
proto.iotics.api.DeleteTwinResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.DeleteTwinResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DeleteTwinResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.DeleteTwinResponse.Payload|undefined} value
 * @return {!proto.iotics.api.DeleteTwinResponse} returns this
*/
proto.iotics.api.DeleteTwinResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DeleteTwinResponse} returns this
 */
proto.iotics.api.DeleteTwinResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DeleteTwinResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeTwinRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeTwinRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeTwinRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.DescribeTwinRequest.Arguments.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeTwinRequest}
 */
proto.iotics.api.DescribeTwinRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeTwinRequest;
  return proto.iotics.api.DescribeTwinRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeTwinRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeTwinRequest}
 */
proto.iotics.api.DescribeTwinRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 3:
      var value = new proto.iotics.api.DescribeTwinRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.DescribeTwinRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeTwinRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeTwinRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeTwinRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.DescribeTwinRequest.Arguments.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeTwinRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeTwinRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeTwinRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeTwinRequest.Arguments}
 */
proto.iotics.api.DescribeTwinRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeTwinRequest.Arguments;
  return proto.iotics.api.DescribeTwinRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeTwinRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeTwinRequest.Arguments}
 */
proto.iotics.api.DescribeTwinRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeTwinRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeTwinRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeTwinRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.DescribeTwinRequest.Arguments.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.DescribeTwinRequest.Arguments} returns this
*/
proto.iotics.api.DescribeTwinRequest.Arguments.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinRequest.Arguments} returns this
 */
proto.iotics.api.DescribeTwinRequest.Arguments.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinRequest.Arguments.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DescribeTwinRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DescribeTwinRequest} returns this
*/
proto.iotics.api.DescribeTwinRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinRequest} returns this
 */
proto.iotics.api.DescribeTwinRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 3;
 * @return {?proto.iotics.api.DescribeTwinRequest.Arguments}
 */
proto.iotics.api.DescribeTwinRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.DescribeTwinRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeTwinRequest.Arguments, 3));
};


/**
 * @param {?proto.iotics.api.DescribeTwinRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.DescribeTwinRequest} returns this
*/
proto.iotics.api.DescribeTwinRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinRequest} returns this
 */
proto.iotics.api.DescribeTwinRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.FeedMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.FeedMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.FeedMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FeedMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedid: (f = msg.getFeedid()) && iotics_api_feed_pb.FeedID.toObject(includeInstance, f),
    storelast: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.FeedMeta}
 */
proto.iotics.api.FeedMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.FeedMeta;
  return proto.iotics.api.FeedMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.FeedMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.FeedMeta}
 */
proto.iotics.api.FeedMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_feed_pb.FeedID;
      reader.readMessage(value,iotics_api_feed_pb.FeedID.deserializeBinaryFromReader);
      msg.setFeedid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStorelast(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.FeedMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.FeedMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.FeedMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.FeedMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_feed_pb.FeedID.serializeBinaryToWriter
    );
  }
  f = message.getStorelast();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional FeedID feedId = 1;
 * @return {?proto.iotics.api.FeedID}
 */
proto.iotics.api.FeedMeta.prototype.getFeedid = function() {
  return /** @type{?proto.iotics.api.FeedID} */ (
    jspb.Message.getWrapperField(this, iotics_api_feed_pb.FeedID, 1));
};


/**
 * @param {?proto.iotics.api.FeedID|undefined} value
 * @return {!proto.iotics.api.FeedMeta} returns this
*/
proto.iotics.api.FeedMeta.prototype.setFeedid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.FeedMeta} returns this
 */
proto.iotics.api.FeedMeta.prototype.clearFeedid = function() {
  return this.setFeedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.FeedMeta.prototype.hasFeedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool storeLast = 3;
 * @return {boolean}
 */
proto.iotics.api.FeedMeta.prototype.getStorelast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.iotics.api.FeedMeta} returns this
 */
proto.iotics.api.FeedMeta.prototype.setStorelast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.InputMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.InputMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.InputMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputid: (f = msg.getInputid()) && iotics_api_input_pb.InputID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.InputMeta}
 */
proto.iotics.api.InputMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.InputMeta;
  return proto.iotics.api.InputMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.InputMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.InputMeta}
 */
proto.iotics.api.InputMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_input_pb.InputID;
      reader.readMessage(value,iotics_api_input_pb.InputID.deserializeBinaryFromReader);
      msg.setInputid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.InputMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.InputMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.InputMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.InputMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_input_pb.InputID.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputID inputId = 1;
 * @return {?proto.iotics.api.InputID}
 */
proto.iotics.api.InputMeta.prototype.getInputid = function() {
  return /** @type{?proto.iotics.api.InputID} */ (
    jspb.Message.getWrapperField(this, iotics_api_input_pb.InputID, 1));
};


/**
 * @param {?proto.iotics.api.InputID|undefined} value
 * @return {!proto.iotics.api.InputMeta} returns this
*/
proto.iotics.api.InputMeta.prototype.setInputid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.InputMeta} returns this
 */
proto.iotics.api.InputMeta.prototype.clearInputid = function() {
  return this.setInputid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.InputMeta.prototype.hasInputid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeTwinResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeTwinResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeTwinResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.DescribeTwinResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeTwinResponse}
 */
proto.iotics.api.DescribeTwinResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeTwinResponse;
  return proto.iotics.api.DescribeTwinResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeTwinResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeTwinResponse}
 */
proto.iotics.api.DescribeTwinResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.DescribeTwinResponse.Payload;
      reader.readMessage(value,proto.iotics.api.DescribeTwinResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeTwinResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeTwinResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeTwinResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DescribeTwinResponse.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeTwinResponse.MetaResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeTwinResponse.MetaResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && iotics_api_common_pb.GeoLocation.toObject(includeInstance, f),
    feedsList: jspb.Message.toObjectList(msg.getFeedsList(),
    proto.iotics.api.FeedMeta.toObject, includeInstance),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.iotics.api.InputMeta.toObject, includeInstance),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    iotics_api_common_pb.Property.toObject, includeInstance),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeTwinResponse.MetaResult;
  return proto.iotics.api.DescribeTwinResponse.MetaResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeTwinResponse.MetaResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.GeoLocation;
      reader.readMessage(value,iotics_api_common_pb.GeoLocation.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 4:
      var value = new proto.iotics.api.FeedMeta;
      reader.readMessage(value,proto.iotics.api.FeedMeta.deserializeBinaryFromReader);
      msg.addFeeds(value);
      break;
    case 5:
      var value = new proto.iotics.api.InputMeta;
      reader.readMessage(value,proto.iotics.api.InputMeta.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 6:
      var value = new iotics_api_common_pb.Property;
      reader.readMessage(value,iotics_api_common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeTwinResponse.MetaResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeTwinResponse.MetaResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.GeoLocation.serializeBinaryToWriter
    );
  }
  f = message.getFeedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.iotics.api.FeedMeta.serializeBinaryToWriter
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.iotics.api.InputMeta.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      iotics_api_common_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional GeoLocation location = 1;
 * @return {?proto.iotics.api.GeoLocation}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.getLocation = function() {
  return /** @type{?proto.iotics.api.GeoLocation} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.GeoLocation, 1));
};


/**
 * @param {?proto.iotics.api.GeoLocation|undefined} value
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated FeedMeta feeds = 4;
 * @return {!Array<!proto.iotics.api.FeedMeta>}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.getFeedsList = function() {
  return /** @type{!Array<!proto.iotics.api.FeedMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotics.api.FeedMeta, 4));
};


/**
 * @param {!Array<!proto.iotics.api.FeedMeta>} value
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.setFeedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.iotics.api.FeedMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.FeedMeta}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.addFeeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.iotics.api.FeedMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.clearFeedsList = function() {
  return this.setFeedsList([]);
};


/**
 * repeated InputMeta inputs = 5;
 * @return {!Array<!proto.iotics.api.InputMeta>}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.iotics.api.InputMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.iotics.api.InputMeta, 5));
};


/**
 * @param {!Array<!proto.iotics.api.InputMeta>} value
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.setInputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.iotics.api.InputMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.InputMeta}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.iotics.api.InputMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.clearInputsList = function() {
  return this.setInputsList([]);
};


/**
 * repeated Property properties = 6;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Property, 6));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * optional google.protobuf.Timestamp createdAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
*/
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinResponse.MetaResult} returns this
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinResponse.MetaResult.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.DescribeTwinResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.DescribeTwinResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f),
    result: (f = msg.getResult()) && proto.iotics.api.DescribeTwinResponse.MetaResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.DescribeTwinResponse.Payload}
 */
proto.iotics.api.DescribeTwinResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.DescribeTwinResponse.Payload;
  return proto.iotics.api.DescribeTwinResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.DescribeTwinResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.DescribeTwinResponse.Payload}
 */
proto.iotics.api.DescribeTwinResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    case 2:
      var value = new proto.iotics.api.DescribeTwinResponse.MetaResult;
      reader.readMessage(value,proto.iotics.api.DescribeTwinResponse.MetaResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.DescribeTwinResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.DescribeTwinResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.DescribeTwinResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.DescribeTwinResponse.MetaResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.DescribeTwinResponse.Payload} returns this
*/
proto.iotics.api.DescribeTwinResponse.Payload.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinResponse.Payload} returns this
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MetaResult result = 2;
 * @return {?proto.iotics.api.DescribeTwinResponse.MetaResult}
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.getResult = function() {
  return /** @type{?proto.iotics.api.DescribeTwinResponse.MetaResult} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeTwinResponse.MetaResult, 2));
};


/**
 * @param {?proto.iotics.api.DescribeTwinResponse.MetaResult|undefined} value
 * @return {!proto.iotics.api.DescribeTwinResponse.Payload} returns this
*/
proto.iotics.api.DescribeTwinResponse.Payload.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinResponse.Payload} returns this
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinResponse.Payload.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.DescribeTwinResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.DescribeTwinResponse} returns this
*/
proto.iotics.api.DescribeTwinResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinResponse} returns this
 */
proto.iotics.api.DescribeTwinResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.DescribeTwinResponse.Payload}
 */
proto.iotics.api.DescribeTwinResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.DescribeTwinResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.DescribeTwinResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.DescribeTwinResponse.Payload|undefined} value
 * @return {!proto.iotics.api.DescribeTwinResponse} returns this
*/
proto.iotics.api.DescribeTwinResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.DescribeTwinResponse} returns this
 */
proto.iotics.api.DescribeTwinResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.DescribeTwinResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.GeoLocationUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.GeoLocationUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.GeoLocationUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.GeoLocationUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && iotics_api_common_pb.GeoLocation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.GeoLocationUpdate}
 */
proto.iotics.api.GeoLocationUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.GeoLocationUpdate;
  return proto.iotics.api.GeoLocationUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.GeoLocationUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.GeoLocationUpdate}
 */
proto.iotics.api.GeoLocationUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.GeoLocation;
      reader.readMessage(value,iotics_api_common_pb.GeoLocation.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.GeoLocationUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.GeoLocationUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.GeoLocationUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.GeoLocationUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.GeoLocation.serializeBinaryToWriter
    );
  }
};


/**
 * optional GeoLocation location = 1;
 * @return {?proto.iotics.api.GeoLocation}
 */
proto.iotics.api.GeoLocationUpdate.prototype.getLocation = function() {
  return /** @type{?proto.iotics.api.GeoLocation} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.GeoLocation, 1));
};


/**
 * @param {?proto.iotics.api.GeoLocation|undefined} value
 * @return {!proto.iotics.api.GeoLocationUpdate} returns this
*/
proto.iotics.api.GeoLocationUpdate.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.GeoLocationUpdate} returns this
 */
proto.iotics.api.GeoLocationUpdate.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.GeoLocationUpdate.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateTwinRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateTwinRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateTwinRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && proto.iotics.api.UpdateTwinRequest.Arguments.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.UpdateTwinRequest.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateTwinRequest}
 */
proto.iotics.api.UpdateTwinRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateTwinRequest;
  return proto.iotics.api.UpdateTwinRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateTwinRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateTwinRequest}
 */
proto.iotics.api.UpdateTwinRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.UpdateTwinRequest.Arguments;
      reader.readMessage(value,proto.iotics.api.UpdateTwinRequest.Arguments.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    case 3:
      var value = new proto.iotics.api.UpdateTwinRequest.Payload;
      reader.readMessage(value,proto.iotics.api.UpdateTwinRequest.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateTwinRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateTwinRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateTwinRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.UpdateTwinRequest.Arguments.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.iotics.api.UpdateTwinRequest.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateTwinRequest.Arguments.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateTwinRequest.Arguments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateTwinRequest.Arguments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinRequest.Arguments.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateTwinRequest.Arguments}
 */
proto.iotics.api.UpdateTwinRequest.Arguments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateTwinRequest.Arguments;
  return proto.iotics.api.UpdateTwinRequest.Arguments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateTwinRequest.Arguments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateTwinRequest.Arguments}
 */
proto.iotics.api.UpdateTwinRequest.Arguments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateTwinRequest.Arguments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateTwinRequest.Arguments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateTwinRequest.Arguments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinRequest.Arguments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.UpdateTwinRequest.Arguments.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.UpdateTwinRequest.Arguments} returns this
*/
proto.iotics.api.UpdateTwinRequest.Arguments.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinRequest.Arguments} returns this
 */
proto.iotics.api.UpdateTwinRequest.Arguments.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinRequest.Arguments.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateTwinRequest.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateTwinRequest.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinRequest.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    properties: (f = msg.getProperties()) && iotics_api_common_pb.PropertyUpdate.toObject(includeInstance, f),
    location: (f = msg.getLocation()) && proto.iotics.api.GeoLocationUpdate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateTwinRequest.Payload}
 */
proto.iotics.api.UpdateTwinRequest.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateTwinRequest.Payload;
  return proto.iotics.api.UpdateTwinRequest.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateTwinRequest.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateTwinRequest.Payload}
 */
proto.iotics.api.UpdateTwinRequest.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new iotics_api_common_pb.PropertyUpdate;
      reader.readMessage(value,iotics_api_common_pb.PropertyUpdate.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    case 6:
      var value = new proto.iotics.api.GeoLocationUpdate;
      reader.readMessage(value,proto.iotics.api.GeoLocationUpdate.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateTwinRequest.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateTwinRequest.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinRequest.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      iotics_api_common_pb.PropertyUpdate.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.iotics.api.GeoLocationUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional PropertyUpdate properties = 3;
 * @return {?proto.iotics.api.PropertyUpdate}
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.getProperties = function() {
  return /** @type{?proto.iotics.api.PropertyUpdate} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.PropertyUpdate, 3));
};


/**
 * @param {?proto.iotics.api.PropertyUpdate|undefined} value
 * @return {!proto.iotics.api.UpdateTwinRequest.Payload} returns this
*/
proto.iotics.api.UpdateTwinRequest.Payload.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinRequest.Payload} returns this
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GeoLocationUpdate location = 6;
 * @return {?proto.iotics.api.GeoLocationUpdate}
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.getLocation = function() {
  return /** @type{?proto.iotics.api.GeoLocationUpdate} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.GeoLocationUpdate, 6));
};


/**
 * @param {?proto.iotics.api.GeoLocationUpdate|undefined} value
 * @return {!proto.iotics.api.UpdateTwinRequest.Payload} returns this
*/
proto.iotics.api.UpdateTwinRequest.Payload.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinRequest.Payload} returns this
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinRequest.Payload.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.UpdateTwinRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.UpdateTwinRequest} returns this
*/
proto.iotics.api.UpdateTwinRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinRequest} returns this
 */
proto.iotics.api.UpdateTwinRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arguments args = 2;
 * @return {?proto.iotics.api.UpdateTwinRequest.Arguments}
 */
proto.iotics.api.UpdateTwinRequest.prototype.getArgs = function() {
  return /** @type{?proto.iotics.api.UpdateTwinRequest.Arguments} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpdateTwinRequest.Arguments, 2));
};


/**
 * @param {?proto.iotics.api.UpdateTwinRequest.Arguments|undefined} value
 * @return {!proto.iotics.api.UpdateTwinRequest} returns this
*/
proto.iotics.api.UpdateTwinRequest.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinRequest} returns this
 */
proto.iotics.api.UpdateTwinRequest.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinRequest.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Payload payload = 3;
 * @return {?proto.iotics.api.UpdateTwinRequest.Payload}
 */
proto.iotics.api.UpdateTwinRequest.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.UpdateTwinRequest.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpdateTwinRequest.Payload, 3));
};


/**
 * @param {?proto.iotics.api.UpdateTwinRequest.Payload|undefined} value
 * @return {!proto.iotics.api.UpdateTwinRequest} returns this
*/
proto.iotics.api.UpdateTwinRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinRequest} returns this
 */
proto.iotics.api.UpdateTwinRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateTwinResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateTwinResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateTwinResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.UpdateTwinResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateTwinResponse}
 */
proto.iotics.api.UpdateTwinResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateTwinResponse;
  return proto.iotics.api.UpdateTwinResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateTwinResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateTwinResponse}
 */
proto.iotics.api.UpdateTwinResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.UpdateTwinResponse.Payload;
      reader.readMessage(value,proto.iotics.api.UpdateTwinResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateTwinResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateTwinResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateTwinResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.UpdateTwinResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpdateTwinResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpdateTwinResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpdateTwinResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpdateTwinResponse.Payload}
 */
proto.iotics.api.UpdateTwinResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpdateTwinResponse.Payload;
  return proto.iotics.api.UpdateTwinResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpdateTwinResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpdateTwinResponse.Payload}
 */
proto.iotics.api.UpdateTwinResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpdateTwinResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpdateTwinResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpdateTwinResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpdateTwinResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.UpdateTwinResponse.Payload.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.UpdateTwinResponse.Payload} returns this
*/
proto.iotics.api.UpdateTwinResponse.Payload.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinResponse.Payload} returns this
 */
proto.iotics.api.UpdateTwinResponse.Payload.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinResponse.Payload.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.UpdateTwinResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.UpdateTwinResponse} returns this
*/
proto.iotics.api.UpdateTwinResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinResponse} returns this
 */
proto.iotics.api.UpdateTwinResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.UpdateTwinResponse.Payload}
 */
proto.iotics.api.UpdateTwinResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.UpdateTwinResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpdateTwinResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.UpdateTwinResponse.Payload|undefined} value
 * @return {!proto.iotics.api.UpdateTwinResponse} returns this
*/
proto.iotics.api.UpdateTwinResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpdateTwinResponse} returns this
 */
proto.iotics.api.UpdateTwinResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpdateTwinResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpsertTwinRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpsertTwinRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpsertTwinRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.UpsertTwinRequest.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpsertTwinRequest}
 */
proto.iotics.api.UpsertTwinRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpsertTwinRequest;
  return proto.iotics.api.UpsertTwinRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpsertTwinRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpsertTwinRequest}
 */
proto.iotics.api.UpsertTwinRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.UpsertTwinRequest.Payload;
      reader.readMessage(value,proto.iotics.api.UpsertTwinRequest.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpsertTwinRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpsertTwinRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpsertTwinRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.UpsertTwinRequest.Payload.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.iotics.api.UpsertTwinRequest.Payload.repeatedFields_ = [5,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpsertTwinRequest.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpsertTwinRequest.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinRequest.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    iotics_api_common_pb.Property.toObject, includeInstance),
    location: (f = msg.getLocation()) && iotics_api_common_pb.GeoLocation.toObject(includeInstance, f),
    feedsList: jspb.Message.toObjectList(msg.getFeedsList(),
    iotics_api_feed_pb.UpsertFeedWithMeta.toObject, includeInstance),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    iotics_api_input_pb.UpsertInputWithMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload}
 */
proto.iotics.api.UpsertTwinRequest.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpsertTwinRequest.Payload;
  return proto.iotics.api.UpsertTwinRequest.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpsertTwinRequest.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload}
 */
proto.iotics.api.UpsertTwinRequest.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    case 5:
      var value = new iotics_api_common_pb.Property;
      reader.readMessage(value,iotics_api_common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 6:
      var value = new iotics_api_common_pb.GeoLocation;
      reader.readMessage(value,iotics_api_common_pb.GeoLocation.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 7:
      var value = new iotics_api_feed_pb.UpsertFeedWithMeta;
      reader.readMessage(value,iotics_api_feed_pb.UpsertFeedWithMeta.deserializeBinaryFromReader);
      msg.addFeeds(value);
      break;
    case 8:
      var value = new iotics_api_input_pb.UpsertInputWithMeta;
      reader.readMessage(value,iotics_api_input_pb.UpsertInputWithMeta.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpsertTwinRequest.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpsertTwinRequest.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinRequest.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      iotics_api_common_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      iotics_api_common_pb.GeoLocation.serializeBinaryToWriter
    );
  }
  f = message.getFeedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      iotics_api_feed_pb.UpsertFeedWithMeta.serializeBinaryToWriter
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      iotics_api_input_pb.UpsertInputWithMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
*/
proto.iotics.api.UpsertTwinRequest.Payload.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Property properties = 5;
 * @return {!Array<!proto.iotics.api.Property>}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.iotics.api.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_common_pb.Property, 5));
};


/**
 * @param {!Array<!proto.iotics.api.Property>} value
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
*/
proto.iotics.api.UpsertTwinRequest.Payload.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.iotics.api.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.Property}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.iotics.api.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * optional GeoLocation location = 6;
 * @return {?proto.iotics.api.GeoLocation}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.getLocation = function() {
  return /** @type{?proto.iotics.api.GeoLocation} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.GeoLocation, 6));
};


/**
 * @param {?proto.iotics.api.GeoLocation|undefined} value
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
*/
proto.iotics.api.UpsertTwinRequest.Payload.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated UpsertFeedWithMeta feeds = 7;
 * @return {!Array<!proto.iotics.api.UpsertFeedWithMeta>}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.getFeedsList = function() {
  return /** @type{!Array<!proto.iotics.api.UpsertFeedWithMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_feed_pb.UpsertFeedWithMeta, 7));
};


/**
 * @param {!Array<!proto.iotics.api.UpsertFeedWithMeta>} value
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
*/
proto.iotics.api.UpsertTwinRequest.Payload.prototype.setFeedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.iotics.api.UpsertFeedWithMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.UpsertFeedWithMeta}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.addFeeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.iotics.api.UpsertFeedWithMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.clearFeedsList = function() {
  return this.setFeedsList([]);
};


/**
 * repeated UpsertInputWithMeta inputs = 8;
 * @return {!Array<!proto.iotics.api.UpsertInputWithMeta>}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.iotics.api.UpsertInputWithMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, iotics_api_input_pb.UpsertInputWithMeta, 8));
};


/**
 * @param {!Array<!proto.iotics.api.UpsertInputWithMeta>} value
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
*/
proto.iotics.api.UpsertTwinRequest.Payload.prototype.setInputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.iotics.api.UpsertInputWithMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.iotics.api.UpsertInputWithMeta}
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.iotics.api.UpsertInputWithMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.iotics.api.UpsertTwinRequest.Payload} returns this
 */
proto.iotics.api.UpsertTwinRequest.Payload.prototype.clearInputsList = function() {
  return this.setInputsList([]);
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.UpsertTwinRequest.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.UpsertTwinRequest} returns this
*/
proto.iotics.api.UpsertTwinRequest.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpsertTwinRequest} returns this
 */
proto.iotics.api.UpsertTwinRequest.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpsertTwinRequest.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.UpsertTwinRequest.Payload}
 */
proto.iotics.api.UpsertTwinRequest.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.UpsertTwinRequest.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpsertTwinRequest.Payload, 2));
};


/**
 * @param {?proto.iotics.api.UpsertTwinRequest.Payload|undefined} value
 * @return {!proto.iotics.api.UpsertTwinRequest} returns this
*/
proto.iotics.api.UpsertTwinRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpsertTwinRequest} returns this
 */
proto.iotics.api.UpsertTwinRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpsertTwinRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpsertTwinResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpsertTwinResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpsertTwinResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && iotics_api_common_pb.Headers.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.iotics.api.UpsertTwinResponse.Payload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpsertTwinResponse}
 */
proto.iotics.api.UpsertTwinResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpsertTwinResponse;
  return proto.iotics.api.UpsertTwinResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpsertTwinResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpsertTwinResponse}
 */
proto.iotics.api.UpsertTwinResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.Headers;
      reader.readMessage(value,iotics_api_common_pb.Headers.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.iotics.api.UpsertTwinResponse.Payload;
      reader.readMessage(value,proto.iotics.api.UpsertTwinResponse.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpsertTwinResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpsertTwinResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpsertTwinResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.Headers.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.iotics.api.UpsertTwinResponse.Payload.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iotics.api.UpsertTwinResponse.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.iotics.api.UpsertTwinResponse.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iotics.api.UpsertTwinResponse.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinResponse.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    twinid: (f = msg.getTwinid()) && iotics_api_common_pb.TwinID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iotics.api.UpsertTwinResponse.Payload}
 */
proto.iotics.api.UpsertTwinResponse.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iotics.api.UpsertTwinResponse.Payload;
  return proto.iotics.api.UpsertTwinResponse.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iotics.api.UpsertTwinResponse.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iotics.api.UpsertTwinResponse.Payload}
 */
proto.iotics.api.UpsertTwinResponse.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new iotics_api_common_pb.TwinID;
      reader.readMessage(value,iotics_api_common_pb.TwinID.deserializeBinaryFromReader);
      msg.setTwinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iotics.api.UpsertTwinResponse.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iotics.api.UpsertTwinResponse.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iotics.api.UpsertTwinResponse.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iotics.api.UpsertTwinResponse.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTwinid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      iotics_api_common_pb.TwinID.serializeBinaryToWriter
    );
  }
};


/**
 * optional TwinID twinId = 1;
 * @return {?proto.iotics.api.TwinID}
 */
proto.iotics.api.UpsertTwinResponse.Payload.prototype.getTwinid = function() {
  return /** @type{?proto.iotics.api.TwinID} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.TwinID, 1));
};


/**
 * @param {?proto.iotics.api.TwinID|undefined} value
 * @return {!proto.iotics.api.UpsertTwinResponse.Payload} returns this
*/
proto.iotics.api.UpsertTwinResponse.Payload.prototype.setTwinid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpsertTwinResponse.Payload} returns this
 */
proto.iotics.api.UpsertTwinResponse.Payload.prototype.clearTwinid = function() {
  return this.setTwinid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpsertTwinResponse.Payload.prototype.hasTwinid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Headers headers = 1;
 * @return {?proto.iotics.api.Headers}
 */
proto.iotics.api.UpsertTwinResponse.prototype.getHeaders = function() {
  return /** @type{?proto.iotics.api.Headers} */ (
    jspb.Message.getWrapperField(this, iotics_api_common_pb.Headers, 1));
};


/**
 * @param {?proto.iotics.api.Headers|undefined} value
 * @return {!proto.iotics.api.UpsertTwinResponse} returns this
*/
proto.iotics.api.UpsertTwinResponse.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpsertTwinResponse} returns this
 */
proto.iotics.api.UpsertTwinResponse.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpsertTwinResponse.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Payload payload = 2;
 * @return {?proto.iotics.api.UpsertTwinResponse.Payload}
 */
proto.iotics.api.UpsertTwinResponse.prototype.getPayload = function() {
  return /** @type{?proto.iotics.api.UpsertTwinResponse.Payload} */ (
    jspb.Message.getWrapperField(this, proto.iotics.api.UpsertTwinResponse.Payload, 2));
};


/**
 * @param {?proto.iotics.api.UpsertTwinResponse.Payload|undefined} value
 * @return {!proto.iotics.api.UpsertTwinResponse} returns this
*/
proto.iotics.api.UpsertTwinResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iotics.api.UpsertTwinResponse} returns this
 */
proto.iotics.api.UpsertTwinResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iotics.api.UpsertTwinResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.iotics.api);
